{
  "contractName": "CommonWill",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Pledge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executorTokensAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gain",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "Success",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalPledge",
          "type": "uint256"
        }
      ],
      "name": "TimeOutMinPledge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "TimeOutProcess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithrawPledge",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "judge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "minPledge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "minPledgeDueTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pledgeToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pledges",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "processDueTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "internalType": "enum CommonWill.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalPledge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_judge",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_processDueTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minPledge",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minPledgeDueTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_pledgeToken",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "judgeSuccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "pledge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withrawPledge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeOutProcess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeOutMinPledge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Pledge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executorTokensAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gain\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"Success\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPledge\",\"type\":\"uint256\"}],\"name\":\"TimeOutMinPledge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"TimeOutProcess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithrawPledge\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_judge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_processDueTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPledge\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPledgeDueTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_pledgeToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"judge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"judgeSuccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPledgeDueTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pledgeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pledges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"processDueTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum CommonWill.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeOutMinPledge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeOutProcess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withrawPledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"initialize(address,uint256,uint256,uint256,address)\":{\"params\":{\"_judge\":\"The judge in the process\",\"_minPledge\":\"Minimal pledge required to reach within a predefined time. If not reached the process is considered  as failed and pledgers can withraw their pledge\",\"_minPledgeDueTime\":\"predefined time for the minimal pledge to be reached\",\"_pledgeToken\":\"The pledge token in the process\",\"_processDueTime\":\"Final time of the process. If this time is reached with no suceess of the executor,  the process is considered as failed and pledgers can withraw their pledge\"}},\"pledge(uint256)\":{\"details\":\"An approve of the ERC20 token is required before calling this function  \",\"params\":{\"amount\":\"The amount of tokens to pledge\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"judgeSuccess(address)\":{\"notice\":\"Called by the judge to decide that an executor succeeded. Allowed only after minimal pledge time and amount have  been reached and before process timeout.\"},\"pledge(uint256)\":{\"notice\":\"Contribute a pledge for the process. Allowed while the process has not timed out or has been finalized by the judge\"},\"timeOutMinPledge()\":{\"notice\":\"check if minimal pledge amount was not reached within the predefined time\"},\"timeOutProcess()\":{\"notice\":\"check if process timeout was reached without success\"},\"withrawPledge()\":{\"notice\":\"Withraw pledge in case the process has failed\"}},\"notice\":\"Common Good process \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CommonWill.sol\":\"CommonWill\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"project:/contracts/CommonWill.sol\":{\"keccak256\":\"0xe22a53fc3a4a9d2f641fbc28fd2796d2d05ec90e7937becb6741842918b1a58f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2ae72594b7391cfd4e837c97eba27f933ceecf008e3499b1f966ce12d9eec2a\",\"dweb:/ipfs/QmfLXCV3GP4mT8dvY7WYifCUNRwfUULJxjN4uwTsbXoKyo\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611749806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806386e79bd91161008c578063aace53bd11610066578063aace53bd14610213578063c21a43e414610231578063f30d1f1e1461024f578063ff4450f51461026d576100ea565b806386e79bd9146101b95780639b4b1786146101d75780639c9ddef8146101f5576100ea565b806359d302c5116100c857806359d302c51461015b57806366dd53d5146101655780636c28e349146101815780637326c9c01461019d576100ea565b8063200d2ed2146100ef578063343576f51461010d578063573255f41461013d575b600080fd5b6100f761028b565b6040516101049190611263565b60405180910390f35b61012760048036038101906101229190610f5d565b61029e565b604051610134919061137e565b60405180910390f35b6101456102b6565b60405161015291906111b2565b60405180910390f35b6101636102dc565b005b61017f600480360381019061017a9190610f5d565b6105a7565b005b61019b60048036038101906101969190610f86565b610856565b005b6101b760048036038101906101b29190611026565b610a1b565b005b6101c1610c6f565b6040516101ce919061122d565b60405180910390f35b6101df610d9e565b6040516101ec919061137e565b60405180910390f35b6101fd610da4565b60405161020a9190611248565b60405180910390f35b61021b610dca565b604051610228919061122d565b60405180910390f35b610239610f0c565b604051610246919061137e565b60405180910390f35b610257610f12565b604051610264919061137e565b60405180910390f35b610275610f18565b604051610282919061137e565b60405180910390f35b600060029054906101000a900460ff1681565b60046020528060005260406000206000915090505481565b600060039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035a9061127e565b60405180910390fd5b60028081111561039c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060029054906101000a900460ff1660028111156103e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14806103f457506103f3610dca565b5b806104035750610402610c6f565b5b15610569576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806006600082825461045f9190611429565b92505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104c3929190611204565b602060405180830381600087803b1580156104dd57600080fd5b505af11580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105159190610ffd565b503373ffffffffffffffffffffffffffffffffffffffff167f2ffae5a0cb93da25fd812ec1a59b4c729c6f1dfd0cacd576d216ce5ff7e2da418260405161055c919061137e565b60405180910390a26105a4565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b9061135e565b60405180910390fd5b50565b600060039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e906112be565b60405180910390fd5b61063f610dca565b1561067f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106769061129e565b60405180910390fd5b610687610c6f565b156106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be906112de565b60405180910390fd5b600354421161070b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610702906112fe565b60405180910390fd5b6000600654905060006006819055506001600060026101000a81548160ff02191690836002811115610766577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016107c8929190611204565b602060405180830381600087803b1580156107e257600080fd5b505af11580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190610ffd565b507fa573ab9d2e3543063328d76b80796e5c0940edfc89ac8074f2fc7833a9cf82928260405161084a91906111b2565b60405180910390a15050565b600060019054906101000a900460ff168061087c575060008054906101000a900460ff16155b6108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b29061131e565b60405180910390fd5b60008060019054906101000a900460ff16159050801561090b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b85600060036101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600181905550836002819055508260038190555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060026101000a81548160ff021916908360028111156109ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055508015610a135760008060016101000a81548160ff0219169083151502179055505b505050505050565b60006002811115610a55577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060029054906101000a900460ff166002811115610a9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141580610aae5750610aad610dca565b5b80610abd5750610abc610c6f565b5b15610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af49061133e565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610b5c939291906111cd565b602060405180830381600087803b158015610b7657600080fd5b505af1158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190610ffd565b508060066000828254610bc191906113d3565b9250508190555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c1791906113d3565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5e91ea8ea1c46300eb761859be01d7b16d44389ef91e03a163a87413cbf55b9582604051610c64919061137e565b60405180910390a250565b6000806002811115610caa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060029054906101000a900460ff166002811115610cf2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610d00575042600154105b15610d96577fa43fd39edb3566d8f64b3609b0372928f063310e2d5bbab78a51a50bf43613c142604051610d34919061137e565b60405180910390a16002600060026101000a81548160ff02191690836002811115610d88577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060019050610d9b565b600090505b90565b60025481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806002811115610e05577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060029054906101000a900460ff166002811115610e4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610e5b575042600354105b8015610e6a5750600254600654105b15610f04577ffb204ccae9191edd3ad64036285097b68f2bf17c9bd075ea3ef08c23aef587a942600654604051610ea2929190611399565b60405180910390a16002600060026101000a81548160ff02191690836002811115610ef6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060019050610f09565b600090505b90565b60065481565b60015481565b60035481565b600081359050610f2d816116ce565b92915050565b600081519050610f42816116e5565b92915050565b600081359050610f57816116fc565b92915050565b600060208284031215610f6f57600080fd5b6000610f7d84828501610f1e565b91505092915050565b600080600080600060a08688031215610f9e57600080fd5b6000610fac88828901610f1e565b9550506020610fbd88828901610f48565b9450506040610fce88828901610f48565b9350506060610fdf88828901610f48565b9250506080610ff088828901610f1e565b9150509295509295909350565b60006020828403121561100f57600080fd5b600061101d84828501610f33565b91505092915050565b60006020828403121561103857600080fd5b600061104684828501610f48565b91505092915050565b6110588161145d565b82525050565b6110678161146f565b82525050565b611076816114b8565b82525050565b611085816114dc565b82525050565b6000611098600d836113c2565b91506110a38261154c565b602082019050919050565b60006110bb6016836113c2565b91506110c682611575565b602082019050919050565b60006110de600a836113c2565b91506110e98261159e565b602082019050919050565b6000611101600f836113c2565b915061110c826115c7565b602082019050919050565b6000611124601e836113c2565b915061112f826115f0565b602082019050919050565b6000611147602e836113c2565b915061115282611619565b604082019050919050565b600061116a6017836113c2565b915061117582611668565b602082019050919050565b600061118d601d836113c2565b915061119882611691565b602082019050919050565b6111ac816114ae565b82525050565b60006020820190506111c7600083018461104f565b92915050565b60006060820190506111e2600083018661104f565b6111ef602083018561104f565b6111fc60408301846111a3565b949350505050565b6000604082019050611219600083018561104f565b61122660208301846111a3565b9392505050565b6000602082019050611242600083018461105e565b92915050565b600060208201905061125d600083018461106d565b92915050565b6000602082019050611278600083018461107c565b92915050565b600060208201905081810360008301526112978161108b565b9050919050565b600060208201905081810360008301526112b7816110ae565b9050919050565b600060208201905081810360008301526112d7816110d1565b9050919050565b600060208201905081810360008301526112f7816110f4565b9050919050565b6000602082019050818103600083015261131781611117565b9050919050565b600060208201905081810360008301526113378161113a565b9050919050565b600060208201905081810360008301526113578161115d565b9050919050565b6000602082019050818103600083015261137781611180565b9050919050565b600060208201905061139360008301846111a3565b92915050565b60006040820190506113ae60008301856111a3565b6113bb60208301846111a3565b9392505050565b600082825260208201905092915050565b60006113de826114ae565b91506113e9836114ae565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561141e5761141d6114ee565b5b828201905092915050565b6000611434826114ae565b915061143f836114ae565b925082821015611452576114516114ee565b5b828203905092915050565b60006114688261148e565b9050919050565b60008115159050919050565b6000819050611489826116ba565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114c3826114ca565b9050919050565b60006114d58261148e565b9050919050565b60006114e78261147b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f6e6c7920706c65646765727300000000000000000000000000000000000000600082015250565b7f4d696e696d616c20706c656467652074696d656f757400000000000000000000600082015250565b7f4f6e6c79206a7564676500000000000000000000000000000000000000000000600082015250565b7f50726f636573732074696d656f75740000000000000000000000000000000000600082015250565b7f4f6e6c79206166746572206d696e696d616c20706c656467652074696d650000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f506c656467652077696e646f7720697320636c6f736564000000000000000000600082015250565b7f77697468726177206e6f7420616c6c6f7765642063757272656e746c79000000600082015250565b600381106116cb576116ca61151d565b5b50565b6116d78161145d565b81146116e257600080fd5b50565b6116ee8161146f565b81146116f957600080fd5b50565b611705816114ae565b811461171057600080fd5b5056fea2646970667358221220aae8088da2615b02be52de5f7287b255f0447ca7ead8dacd6c3c87b719f7cf6364736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806386e79bd91161008c578063aace53bd11610066578063aace53bd14610213578063c21a43e414610231578063f30d1f1e1461024f578063ff4450f51461026d576100ea565b806386e79bd9146101b95780639b4b1786146101d75780639c9ddef8146101f5576100ea565b806359d302c5116100c857806359d302c51461015b57806366dd53d5146101655780636c28e349146101815780637326c9c01461019d576100ea565b8063200d2ed2146100ef578063343576f51461010d578063573255f41461013d575b600080fd5b6100f761028b565b6040516101049190611263565b60405180910390f35b61012760048036038101906101229190610f5d565b61029e565b604051610134919061137e565b60405180910390f35b6101456102b6565b60405161015291906111b2565b60405180910390f35b6101636102dc565b005b61017f600480360381019061017a9190610f5d565b6105a7565b005b61019b60048036038101906101969190610f86565b610856565b005b6101b760048036038101906101b29190611026565b610a1b565b005b6101c1610c6f565b6040516101ce919061122d565b60405180910390f35b6101df610d9e565b6040516101ec919061137e565b60405180910390f35b6101fd610da4565b60405161020a9190611248565b60405180910390f35b61021b610dca565b604051610228919061122d565b60405180910390f35b610239610f0c565b604051610246919061137e565b60405180910390f35b610257610f12565b604051610264919061137e565b60405180910390f35b610275610f18565b604051610282919061137e565b60405180910390f35b600060029054906101000a900460ff1681565b60046020528060005260406000206000915090505481565b600060039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035a9061127e565b60405180910390fd5b60028081111561039c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060029054906101000a900460ff1660028111156103e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14806103f457506103f3610dca565b5b806104035750610402610c6f565b5b15610569576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806006600082825461045f9190611429565b92505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104c3929190611204565b602060405180830381600087803b1580156104dd57600080fd5b505af11580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105159190610ffd565b503373ffffffffffffffffffffffffffffffffffffffff167f2ffae5a0cb93da25fd812ec1a59b4c729c6f1dfd0cacd576d216ce5ff7e2da418260405161055c919061137e565b60405180910390a26105a4565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b9061135e565b60405180910390fd5b50565b600060039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e906112be565b60405180910390fd5b61063f610dca565b1561067f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106769061129e565b60405180910390fd5b610687610c6f565b156106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be906112de565b60405180910390fd5b600354421161070b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610702906112fe565b60405180910390fd5b6000600654905060006006819055506001600060026101000a81548160ff02191690836002811115610766577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016107c8929190611204565b602060405180830381600087803b1580156107e257600080fd5b505af11580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190610ffd565b507fa573ab9d2e3543063328d76b80796e5c0940edfc89ac8074f2fc7833a9cf82928260405161084a91906111b2565b60405180910390a15050565b600060019054906101000a900460ff168061087c575060008054906101000a900460ff16155b6108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b29061131e565b60405180910390fd5b60008060019054906101000a900460ff16159050801561090b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b85600060036101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600181905550836002819055508260038190555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060026101000a81548160ff021916908360028111156109ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055508015610a135760008060016101000a81548160ff0219169083151502179055505b505050505050565b60006002811115610a55577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060029054906101000a900460ff166002811115610a9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141580610aae5750610aad610dca565b5b80610abd5750610abc610c6f565b5b15610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af49061133e565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610b5c939291906111cd565b602060405180830381600087803b158015610b7657600080fd5b505af1158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190610ffd565b508060066000828254610bc191906113d3565b9250508190555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c1791906113d3565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5e91ea8ea1c46300eb761859be01d7b16d44389ef91e03a163a87413cbf55b9582604051610c64919061137e565b60405180910390a250565b6000806002811115610caa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060029054906101000a900460ff166002811115610cf2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610d00575042600154105b15610d96577fa43fd39edb3566d8f64b3609b0372928f063310e2d5bbab78a51a50bf43613c142604051610d34919061137e565b60405180910390a16002600060026101000a81548160ff02191690836002811115610d88577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060019050610d9b565b600090505b90565b60025481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806002811115610e05577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060029054906101000a900460ff166002811115610e4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610e5b575042600354105b8015610e6a5750600254600654105b15610f04577ffb204ccae9191edd3ad64036285097b68f2bf17c9bd075ea3ef08c23aef587a942600654604051610ea2929190611399565b60405180910390a16002600060026101000a81548160ff02191690836002811115610ef6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060019050610f09565b600090505b90565b60065481565b60015481565b60035481565b600081359050610f2d816116ce565b92915050565b600081519050610f42816116e5565b92915050565b600081359050610f57816116fc565b92915050565b600060208284031215610f6f57600080fd5b6000610f7d84828501610f1e565b91505092915050565b600080600080600060a08688031215610f9e57600080fd5b6000610fac88828901610f1e565b9550506020610fbd88828901610f48565b9450506040610fce88828901610f48565b9350506060610fdf88828901610f48565b9250506080610ff088828901610f1e565b9150509295509295909350565b60006020828403121561100f57600080fd5b600061101d84828501610f33565b91505092915050565b60006020828403121561103857600080fd5b600061104684828501610f48565b91505092915050565b6110588161145d565b82525050565b6110678161146f565b82525050565b611076816114b8565b82525050565b611085816114dc565b82525050565b6000611098600d836113c2565b91506110a38261154c565b602082019050919050565b60006110bb6016836113c2565b91506110c682611575565b602082019050919050565b60006110de600a836113c2565b91506110e98261159e565b602082019050919050565b6000611101600f836113c2565b915061110c826115c7565b602082019050919050565b6000611124601e836113c2565b915061112f826115f0565b602082019050919050565b6000611147602e836113c2565b915061115282611619565b604082019050919050565b600061116a6017836113c2565b915061117582611668565b602082019050919050565b600061118d601d836113c2565b915061119882611691565b602082019050919050565b6111ac816114ae565b82525050565b60006020820190506111c7600083018461104f565b92915050565b60006060820190506111e2600083018661104f565b6111ef602083018561104f565b6111fc60408301846111a3565b949350505050565b6000604082019050611219600083018561104f565b61122660208301846111a3565b9392505050565b6000602082019050611242600083018461105e565b92915050565b600060208201905061125d600083018461106d565b92915050565b6000602082019050611278600083018461107c565b92915050565b600060208201905081810360008301526112978161108b565b9050919050565b600060208201905081810360008301526112b7816110ae565b9050919050565b600060208201905081810360008301526112d7816110d1565b9050919050565b600060208201905081810360008301526112f7816110f4565b9050919050565b6000602082019050818103600083015261131781611117565b9050919050565b600060208201905081810360008301526113378161113a565b9050919050565b600060208201905081810360008301526113578161115d565b9050919050565b6000602082019050818103600083015261137781611180565b9050919050565b600060208201905061139360008301846111a3565b92915050565b60006040820190506113ae60008301856111a3565b6113bb60208301846111a3565b9392505050565b600082825260208201905092915050565b60006113de826114ae565b91506113e9836114ae565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561141e5761141d6114ee565b5b828201905092915050565b6000611434826114ae565b915061143f836114ae565b925082821015611452576114516114ee565b5b828203905092915050565b60006114688261148e565b9050919050565b60008115159050919050565b6000819050611489826116ba565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114c3826114ca565b9050919050565b60006114d58261148e565b9050919050565b60006114e78261147b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f6e6c7920706c65646765727300000000000000000000000000000000000000600082015250565b7f4d696e696d616c20706c656467652074696d656f757400000000000000000000600082015250565b7f4f6e6c79206a7564676500000000000000000000000000000000000000000000600082015250565b7f50726f636573732074696d656f75740000000000000000000000000000000000600082015250565b7f4f6e6c79206166746572206d696e696d616c20706c656467652074696d650000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f506c656467652077696e646f7720697320636c6f736564000000000000000000600082015250565b7f77697468726177206e6f7420616c6c6f7765642063757272656e746c79000000600082015250565b600381106116cb576116ca61151d565b5b50565b6116d78161145d565b81146116e257600080fd5b50565b6116ee8161146f565b81146116f957600080fd5b50565b611705816114ae565b811461171057600080fd5b5056fea2646970667358221220aae8088da2615b02be52de5f7287b255f0447ca7ead8dacd6c3c87b719f7cf6364736f6c63430008020033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15467:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:10",
                "type": ""
              }
            ],
            "src": "7:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:10"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:10",
                "type": ""
              }
            ],
            "src": "152:137:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "357:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "366:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "357:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "395:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "395:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "325:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "333:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "341:5:10",
                "type": ""
              }
            ],
            "src": "295:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "506:196:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "552:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "561:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "564:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "554:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "554:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "554:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "527:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "536:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "523:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "523:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "519:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "516:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "578:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "593:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "607:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "597:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "622:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "657:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "668:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "653:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "653:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "677:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "632:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "632:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "622:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "476:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "487:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "499:6:10",
                "type": ""
              }
            ],
            "src": "440:262:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "842:710:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "889:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "898:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "901:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "891:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "891:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "891:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "863:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "872:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "859:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "859:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "884:3:10",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "855:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "855:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "852:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "915:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "930:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "944:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "934:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "959:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "994:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1005:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "990:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "990:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1014:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "969:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "969:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "959:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1042:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1057:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1071:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1061:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1087:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1122:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1133:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1118:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1118:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1142:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1097:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1097:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1087:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1170:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1185:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1199:2:10",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1189:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1215:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1250:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1261:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1246:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1246:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1270:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1225:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1225:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1215:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1298:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1313:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1327:2:10",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1317:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1343:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1378:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1389:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1374:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1374:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1398:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1353:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1353:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1343:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1426:119:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1441:17:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1455:3:10",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1445:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1472:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1507:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1518:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1503:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1503:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1527:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1482:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1482:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "1472:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "780:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "791:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "803:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "811:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "819:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "827:6:10",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "835:6:10",
                "type": ""
              }
            ],
            "src": "708:844:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1632:204:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1678:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1687:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1690:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1680:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1680:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1680:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1653:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1662:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1649:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1649:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1674:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1645:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1642:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1704:125:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1719:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1733:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1723:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1748:71:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1791:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1802:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1787:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1787:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1811:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1758:28:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1758:61:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1748:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1602:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1613:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1625:6:10",
                "type": ""
              }
            ],
            "src": "1558:278:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1908:196:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1954:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1963:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1966:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1956:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1956:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1956:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1929:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1938:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1925:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1925:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1950:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1921:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1918:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1980:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1995:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2009:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1999:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2024:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2059:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2070:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2055:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2055:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2079:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2034:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2034:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2024:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1878:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1889:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1901:6:10",
                "type": ""
              }
            ],
            "src": "1842:262:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2175:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2192:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2215:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2197:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2197:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2185:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2185:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2163:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2170:3:10",
                "type": ""
              }
            ],
            "src": "2110:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2293:50:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2310:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2330:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2315:14:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2315:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2303:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2303:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2303:34:10"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2281:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2288:3:10",
                "type": ""
              }
            ],
            "src": "2234:109:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2428:80:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2445:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2495:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$749_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2450:44:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2450:51:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2438:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:64:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2438:64:10"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$749_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2416:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2423:3:10",
                "type": ""
              }
            ],
            "src": "2349:159:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2587:74:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2604:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2648:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Status_$807_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2609:38:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2609:45:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2597:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2597:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2597:58:10"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Status_$807_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2575:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2582:3:10",
                "type": ""
              }
            ],
            "src": "2514:147:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2813:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2823:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2889:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2894:2:10",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2830:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2830:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2823:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2995:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5",
                      "nodeType": "YulIdentifier",
                      "src": "2906:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2906:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2906:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3008:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3019:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3024:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3015:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3015:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3008:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2801:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2809:3:10",
                "type": ""
              }
            ],
            "src": "2667:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3185:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3195:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3261:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3266:2:10",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3202:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3202:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3195:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3367:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9",
                      "nodeType": "YulIdentifier",
                      "src": "3278:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3278:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3278:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3380:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3391:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3396:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3387:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3387:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3380:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3173:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3181:3:10",
                "type": ""
              }
            ],
            "src": "3039:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3557:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3567:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3633:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3638:2:10",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3574:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3574:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3567:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3739:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d",
                      "nodeType": "YulIdentifier",
                      "src": "3650:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3650:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3650:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3752:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3763:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3768:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3759:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3759:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3752:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3545:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3553:3:10",
                "type": ""
              }
            ],
            "src": "3411:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3929:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3939:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4005:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4010:2:10",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3946:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3946:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3939:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4111:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2",
                      "nodeType": "YulIdentifier",
                      "src": "4022:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4022:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4022:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4124:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4135:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4140:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4131:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4131:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4124:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3917:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3925:3:10",
                "type": ""
              }
            ],
            "src": "3783:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4301:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4311:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4377:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4382:2:10",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4318:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4318:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4311:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4483:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c",
                      "nodeType": "YulIdentifier",
                      "src": "4394:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4394:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4394:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4496:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4507:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4512:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4503:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4503:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4496:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4289:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4297:3:10",
                "type": ""
              }
            ],
            "src": "4155:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4673:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4683:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4749:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4754:2:10",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4690:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4690:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4683:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4855:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                      "nodeType": "YulIdentifier",
                      "src": "4766:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4766:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4766:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4868:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4879:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4884:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4875:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4875:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4868:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4661:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4669:3:10",
                "type": ""
              }
            ],
            "src": "4527:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5045:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5055:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5121:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5126:2:10",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5062:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5062:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5055:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5227:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f",
                      "nodeType": "YulIdentifier",
                      "src": "5138:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5138:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5138:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5240:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5251:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5256:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5247:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5247:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5240:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5033:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5041:3:10",
                "type": ""
              }
            ],
            "src": "4899:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5417:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5427:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5493:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5498:2:10",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5434:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5434:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5427:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5599:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1",
                      "nodeType": "YulIdentifier",
                      "src": "5510:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5510:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5510:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5612:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5623:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5628:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5619:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5619:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5612:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5405:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5413:3:10",
                "type": ""
              }
            ],
            "src": "5271:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5708:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5725:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5748:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5730:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5730:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5718:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5718:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5718:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5696:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5703:3:10",
                "type": ""
              }
            ],
            "src": "5643:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5865:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5875:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5887:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5898:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5883:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5883:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5875:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5955:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5968:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5979:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5964:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5964:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5911:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5911:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5911:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5837:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5849:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5860:4:10",
                "type": ""
              }
            ],
            "src": "5767:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6149:288:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6159:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6171:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6182:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6167:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6167:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6159:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6239:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6252:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6263:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6248:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6248:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6195:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6195:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6195:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6320:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6333:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6344:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6329:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6329:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6276:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6276:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6276:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6402:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6415:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6426:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6411:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6411:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6358:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6358:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6358:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6105:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6117:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6125:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6133:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6144:4:10",
                "type": ""
              }
            ],
            "src": "5995:442:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6569:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6579:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6591:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6602:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6587:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6587:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6579:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6659:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6672:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6683:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6668:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6668:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6615:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6615:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6615:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6740:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6753:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6764:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6749:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6749:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6696:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6696:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6533:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6545:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6553:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6564:4:10",
                "type": ""
              }
            ],
            "src": "6443:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6873:118:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6883:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6895:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6906:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6891:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6891:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6883:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6957:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6970:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6981:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6966:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6966:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6919:37:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6919:65:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6919:65:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6845:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6857:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6868:4:10",
                "type": ""
              }
            ],
            "src": "6781:210:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7109:138:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7119:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7131:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7142:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7127:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7127:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7119:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7213:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7226:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7237:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7222:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7222:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$749_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7155:57:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7155:85:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7155:85:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$749__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7081:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7093:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7104:4:10",
                "type": ""
              }
            ],
            "src": "6997:250:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7359:132:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7369:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7381:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7392:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7377:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7377:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7369:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7457:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7470:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7481:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7466:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7466:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Status_$807_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7405:51:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7405:79:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7405:79:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_Status_$807__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7331:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7343:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7354:4:10",
                "type": ""
              }
            ],
            "src": "7253:238:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7668:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7678:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7690:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7701:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7686:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7686:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7678:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7725:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7736:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7721:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7721:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7744:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7750:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7740:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7740:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7714:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7714:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7714:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7770:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7904:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7778:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7778:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7770:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7648:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7663:4:10",
                "type": ""
              }
            ],
            "src": "7497:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8093:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8103:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8115:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8126:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8111:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8111:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8103:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8150:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8161:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8146:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8146:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8169:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8175:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8165:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8165:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8139:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8139:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8139:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8195:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8329:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8203:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8203:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8195:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8073:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8088:4:10",
                "type": ""
              }
            ],
            "src": "7922:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8518:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8528:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8540:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8551:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8536:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8536:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8528:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8575:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8586:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8571:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8571:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8594:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8600:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8590:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8590:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8564:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8564:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8564:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8620:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8754:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8628:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8628:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8620:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8498:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8513:4:10",
                "type": ""
              }
            ],
            "src": "8347:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8943:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8953:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8965:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8976:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8961:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8961:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8953:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9000:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9011:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8996:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8996:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9019:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9025:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9015:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9015:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8989:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8989:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8989:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9045:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9179:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9053:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9053:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9045:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8923:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8938:4:10",
                "type": ""
              }
            ],
            "src": "8772:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9368:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9378:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9390:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9401:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9386:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9386:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9378:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9425:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9436:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9421:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9421:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9444:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9450:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9440:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9440:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9414:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9414:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9414:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9470:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9604:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9478:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9478:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9470:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9348:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9363:4:10",
                "type": ""
              }
            ],
            "src": "9197:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9793:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9803:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9815:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9826:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9811:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9811:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9803:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9850:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9861:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9846:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9846:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9869:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9875:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9865:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9865:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9839:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9839:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9839:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9895:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10029:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9903:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9903:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9895:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9773:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9788:4:10",
                "type": ""
              }
            ],
            "src": "9622:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10218:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10228:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10240:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10251:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10236:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10236:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10228:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10275:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10286:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10271:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10271:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10294:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10300:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10290:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10290:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10264:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10264:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10264:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10320:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10454:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10328:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10328:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10320:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10198:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10213:4:10",
                "type": ""
              }
            ],
            "src": "10047:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10643:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10653:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10665:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10676:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10661:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10661:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10653:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10700:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10711:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10696:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10696:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10719:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10725:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10715:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10715:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10689:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10689:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10689:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10745:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10879:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10753:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10753:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10745:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10623:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10638:4:10",
                "type": ""
              }
            ],
            "src": "10472:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10995:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11005:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11017:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11028:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11013:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11013:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11005:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11085:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11098:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11109:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11094:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11094:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11041:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11041:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11041:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10967:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10979:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10990:4:10",
                "type": ""
              }
            ],
            "src": "10897:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11251:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11261:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11273:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11284:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11269:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11269:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11261:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11341:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11354:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11365:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11350:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11350:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11297:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11297:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11297:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11422:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11435:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11446:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11431:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11431:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11378:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11378:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11378:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11215:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11227:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11235:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11246:4:10",
                "type": ""
              }
            ],
            "src": "11125:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11559:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11576:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11581:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11569:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11569:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11569:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11597:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11616:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11621:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11612:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11612:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "11597:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11531:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11536:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "11547:11:10",
                "type": ""
              }
            ],
            "src": "11463:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11682:261:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11692:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11715:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11697:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11697:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11692:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11726:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11749:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11731:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11731:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11726:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11889:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11891:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11891:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11891:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11810:1:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11817:66:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11885:1:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11813:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11813:74:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11807:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11807:81:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11804:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11921:16:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11932:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11935:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11928:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11928:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11921:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11669:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11672:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11678:3:10",
                "type": ""
              }
            ],
            "src": "11638:305:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11994:146:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12004:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12027:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12009:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12009:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12004:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12038:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12061:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12043:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12043:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12038:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12085:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12087:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12087:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12087:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12079:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12082:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12076:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12076:8:10"
                  },
                  "nodeType": "YulIf",
                  "src": "12073:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12117:17:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12129:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12132:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12125:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12125:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12117:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11980:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11983:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11989:4:10",
                "type": ""
              }
            ],
            "src": "11949:191:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12191:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12201:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12230:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12212:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12212:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12201:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12173:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12183:7:10",
                "type": ""
              }
            ],
            "src": "12146:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12290:48:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12300:32:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12325:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12318:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12318:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12311:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12311:21:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12300:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12272:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12282:7:10",
                "type": ""
              }
            ],
            "src": "12248:90:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12399:76:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12409:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12420:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12409:7:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12463:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Status_$807",
                      "nodeType": "YulIdentifier",
                      "src": "12426:36:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12426:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12426:43:10"
                }
              ]
            },
            "name": "cleanup_t_enum$_Status_$807",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12381:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12391:7:10",
                "type": ""
              }
            ],
            "src": "12344:131:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12526:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12536:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12551:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12558:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12547:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12547:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12536:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12508:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12518:7:10",
                "type": ""
              }
            ],
            "src": "12481:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12658:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12668:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12679:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12668:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12640:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12650:7:10",
                "type": ""
              }
            ],
            "src": "12613:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12770:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12780:64:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12838:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$749_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12793:44:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12793:51:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12780:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$749_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12750:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12760:9:10",
                "type": ""
              }
            ],
            "src": "12696:154:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12930:53:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12940:37:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12971:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12953:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12953:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12940:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$749_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12910:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12920:9:10",
                "type": ""
              }
            ],
            "src": "12856:127:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13057:63:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13067:47:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13108:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Status_$807",
                      "nodeType": "YulIdentifier",
                      "src": "13080:27:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13080:34:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "13067:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Status_$807_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13037:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "13047:9:10",
                "type": ""
              }
            ],
            "src": "12989:131:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13154:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13171:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13174:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13164:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13164:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13164:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13268:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13271:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13261:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13261:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13261:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13292:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13295:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13285:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13285:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13285:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13126:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13340:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13357:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13360:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13350:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13350:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13350:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13454:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13457:4:10",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13447:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13447:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13447:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13478:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13481:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13471:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13471:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13471:15:10"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "13312:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13604:57:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13626:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13634:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13622:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13622:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13638:15:10",
                        "type": "",
                        "value": "Only pledgers"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13615:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13615:39:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13615:39:10"
                }
              ]
            },
            "name": "store_literal_in_memory_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13596:6:10",
                "type": ""
              }
            ],
            "src": "13498:163:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13773:66:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13795:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13803:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13791:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13791:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13807:24:10",
                        "type": "",
                        "value": "Minimal pledge timeout"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13784:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13784:48:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13784:48:10"
                }
              ]
            },
            "name": "store_literal_in_memory_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13765:6:10",
                "type": ""
              }
            ],
            "src": "13667:172:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13951:54:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13973:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13981:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13969:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13969:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13985:12:10",
                        "type": "",
                        "value": "Only judge"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13962:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13962:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13962:36:10"
                }
              ]
            },
            "name": "store_literal_in_memory_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13943:6:10",
                "type": ""
              }
            ],
            "src": "13845:160:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14117:59:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14139:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14147:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14135:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14135:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14151:17:10",
                        "type": "",
                        "value": "Process timeout"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14128:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14128:41:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14128:41:10"
                }
              ]
            },
            "name": "store_literal_in_memory_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14109:6:10",
                "type": ""
              }
            ],
            "src": "14011:165:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14288:74:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14310:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14318:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14306:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14306:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14322:32:10",
                        "type": "",
                        "value": "Only after minimal pledge time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14299:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14299:56:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14299:56:10"
                }
              ]
            },
            "name": "store_literal_in_memory_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14280:6:10",
                "type": ""
              }
            ],
            "src": "14182:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14474:127:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14496:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14504:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14492:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14492:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14508:34:10",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14485:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14485:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14485:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14564:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14572:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14560:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14560:15:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14577:16:10",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14553:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14553:41:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14553:41:10"
                }
              ]
            },
            "name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14466:6:10",
                "type": ""
              }
            ],
            "src": "14368:233:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14713:67:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14735:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14743:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14731:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14731:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14747:25:10",
                        "type": "",
                        "value": "Pledge window is closed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14724:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14724:49:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14724:49:10"
                }
              ]
            },
            "name": "store_literal_in_memory_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14705:6:10",
                "type": ""
              }
            ],
            "src": "14607:173:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14892:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14914:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14922:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14910:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14910:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14926:31:10",
                        "type": "",
                        "value": "withraw not allowed currently"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14903:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14903:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14903:55:10"
                }
              ]
            },
            "name": "store_literal_in_memory_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14884:6:10",
                "type": ""
              }
            ],
            "src": "14786:179:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15024:62:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15058:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "15060:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15060:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15060:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15047:5:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15054:1:10",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "15044:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15044:12:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15037:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15037:20:10"
                  },
                  "nodeType": "YulIf",
                  "src": "15034:2:10"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Status_$807",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15017:5:10",
                "type": ""
              }
            ],
            "src": "14971:115:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15135:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15192:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15201:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15204:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15194:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15194:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15194:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15158:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15183:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "15165:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15165:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15155:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15155:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15148:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15148:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "15145:2:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15128:5:10",
                "type": ""
              }
            ],
            "src": "15092:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15260:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15314:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15323:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15326:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15316:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15316:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15316:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15283:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15305:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "15290:14:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15290:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15280:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15280:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15273:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15273:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "15270:2:10"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15253:5:10",
                "type": ""
              }
            ],
            "src": "15220:116:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15385:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15442:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15451:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15454:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15444:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15444:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15444:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15408:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15433:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "15415:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15415:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15405:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15405:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15398:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15398:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "15395:2:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15378:5:10",
                "type": ""
              }
            ],
            "src": "15342:122:10"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$749_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$749_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_Status_$807_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$807_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$749__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$749_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_Status_$807__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Status_$807_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Status_$807(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$807(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$749_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$749_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$749_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_Status_$807_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$807(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only pledgers\")\n\n    }\n\n    function store_literal_in_memory_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimal pledge timeout\")\n\n    }\n\n    function store_literal_in_memory_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only judge\")\n\n    }\n\n    function store_literal_in_memory_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Process timeout\")\n\n    }\n\n    function store_literal_in_memory_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only after minimal pledge time\")\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function store_literal_in_memory_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pledge window is closed\")\n\n    }\n\n    function store_literal_in_memory_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1(memPtr) {\n\n        mstore(add(memPtr, 0), \"withraw not allowed currently\")\n\n    }\n\n    function validator_assert_t_enum$_Status_$807(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "212:4534:6:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "212:4534:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;324:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;351:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3366:552;;;:::i;:::-;;2117:511;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1483:438;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2914:370;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4006:293;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;409:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;515:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4408:336;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;546:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;324:20;;;;;;;;;;;;;:::o;470:39::-;;;;;;;;;;;;;;;;;:::o;351:20::-;;;;;;;;;;;;;:::o;3366:552::-;3413:17;3433:7;:19;3441:10;3433:19;;;;;;;;;;;;;;;;3413:39;;3485:1;3470:12;:16;3462:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3528:22;3518:32;;;;;;;;;;;;;;;;:6;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;:66;;;;3566:18;:16;:18::i;:::-;3518:66;:99;;;;3601:16;:14;:16::i;:::-;3518:99;3514:398;;;3663:1;3641:7;:19;3649:10;3641:19;;;;;;;;;;;;;;;:23;;;;3694:12;3679:11;;:27;;;;;;;:::i;:::-;;;;;;;;3720:11;;;;;;;;;;;:20;;;3741:10;3753:12;3720:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3799:10;3785:39;;;3811:12;3785:39;;;;;;:::i;:::-;;;;;;;;3514:398;;;3862:39;;;;;;;;;;:::i;:::-;;;;;;;;3514:398;3366:552;:::o;2117:511::-;2199:5;;;;;;;;;;;2185:19;;:10;:19;;;2177:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2238:18;:16;:18::i;:::-;2237:19;2229:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2302:16;:14;:16::i;:::-;2301:17;2293:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2374:16;;2356:15;:34;2348:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2436:20;2459:11;;2436:34;;2494:1;2480:11;:15;;;;2514:22;2505:6;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2546:11;;;;;;;;;;;:20;;;2567:6;2575:15;2546:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2606:15;2614:6;2606:15;;;;;;:::i;:::-;;;;;;;;2117:511;;:::o;1483:438::-;1409:13:1;;;;;;;;;;;:30;;;;1427:12;;;;;;;;;;1426:13;1409:30;1401:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;1501:19;1524:13;;;;;;;;;;;1523:14;1501:36;;1551:14;1547:98;;;1597:4;1581:13;;:20;;;;;;;;;;;;;;;;;;1630:4;1615:12;;:19;;;;;;;;;;;;;;;;;;1547:98;1704:6:6::1;1696:5;;:14;;;;;;;;;;;;;;;;;;1737:15;1720:14;:32;;;;1774:10;1762:9;:22;;;;1813:17;1794:16;:36;;;;1861:12;1840:11;;:34;;;;;;;;;;;;;;;;;;1893:21;1884:6:::0;::::1;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:14:1::0;1667:66;;;1717:5;1701:13;;:21;;;;;;;;;;;;;;;;;;1667:66;1483:438:6;;;;;;:::o;2914:370::-;2975:21;2965:31;;;;;;;;;;;;;;;;:6;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;:53;;;;3000:18;:16;:18::i;:::-;2965:53;:73;;;;3022:16;:14;:16::i;:::-;2965:73;2961:136;;;3053:33;;;;;;;;;;:::i;:::-;;;;;;;;2961:136;3107:11;;;;;;;;;;;:24;;;3132:10;3152:4;3159:6;3107:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3191:6;3176:11;;:21;;;;;;;:::i;:::-;;;;;;;;3230:6;3207:7;:19;3215:10;3207:19;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;3258:10;3251:26;;;3270:6;3251:26;;;;;;:::i;:::-;;;;;;;;2914:370;:::o;4006:293::-;4047:4;4077:21;4067:31;;;;;;;;;;;;;;;;:6;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;4066:72;;;;;4122:15;4105:14;;:32;4066:72;4062:209;;;4158:31;4173:15;4158:31;;;;;;:::i;:::-;;;;;;;;4213:22;4204:6;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4256:4;4249:11;;;;4062:209;4287:5;4280:12;;4006:293;;:::o;409:21::-;;;;:::o;515:25::-;;;;;;;;;;;;;:::o;4408:336::-;4451:4;4481:21;4471:31;;;;;;;;;;;;;;;;:6;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;4470:71;;;;;4526:15;4507:16;;:34;4470:71;:98;;;;;4559:9;;4545:11;;:23;4470:98;4466:250;;;4588:46;4605:15;4622:11;;4588:46;;;;;;;:::i;:::-;;;;;;;;4658:22;4649:6;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4701:4;4694:11;;;;4466:250;4732:5;4725:12;;4408:336;;:::o;546:23::-;;;;:::o;377:26::-;;;;:::o;436:28::-;;;;:::o;7:139:10:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:844::-;;;;;;884:3;872:9;863:7;859:23;855:33;852:2;;;901:1;898;891:12;852:2;944:1;969:53;1014:7;1005:6;994:9;990:22;969:53;:::i;:::-;959:63;;915:117;1071:2;1097:53;1142:7;1133:6;1122:9;1118:22;1097:53;:::i;:::-;1087:63;;1042:118;1199:2;1225:53;1270:7;1261:6;1250:9;1246:22;1225:53;:::i;:::-;1215:63;;1170:118;1327:2;1353:53;1398:7;1389:6;1378:9;1374:22;1353:53;:::i;:::-;1343:63;;1298:118;1455:3;1482:53;1527:7;1518:6;1507:9;1503:22;1482:53;:::i;:::-;1472:63;;1426:119;842:710;;;;;;;;:::o;1558:278::-;;1674:2;1662:9;1653:7;1649:23;1645:32;1642:2;;;1690:1;1687;1680:12;1642:2;1733:1;1758:61;1811:7;1802:6;1791:9;1787:22;1758:61;:::i;:::-;1748:71;;1704:125;1632:204;;;;:::o;1842:262::-;;1950:2;1938:9;1929:7;1925:23;1921:32;1918:2;;;1966:1;1963;1956:12;1918:2;2009:1;2034:53;2079:7;2070:6;2059:9;2055:22;2034:53;:::i;:::-;2024:63;;1980:117;1908:196;;;;:::o;2110:118::-;2197:24;2215:5;2197:24;:::i;:::-;2192:3;2185:37;2175:53;;:::o;2234:109::-;2315:21;2330:5;2315:21;:::i;:::-;2310:3;2303:34;2293:50;;:::o;2349:159::-;2450:51;2495:5;2450:51;:::i;:::-;2445:3;2438:64;2428:80;;:::o;2514:147::-;2609:45;2648:5;2609:45;:::i;:::-;2604:3;2597:58;2587:74;;:::o;2667:366::-;;2830:67;2894:2;2889:3;2830:67;:::i;:::-;2823:74;;2906:93;2995:3;2906:93;:::i;:::-;3024:2;3019:3;3015:12;3008:19;;2813:220;;;:::o;3039:366::-;;3202:67;3266:2;3261:3;3202:67;:::i;:::-;3195:74;;3278:93;3367:3;3278:93;:::i;:::-;3396:2;3391:3;3387:12;3380:19;;3185:220;;;:::o;3411:366::-;;3574:67;3638:2;3633:3;3574:67;:::i;:::-;3567:74;;3650:93;3739:3;3650:93;:::i;:::-;3768:2;3763:3;3759:12;3752:19;;3557:220;;;:::o;3783:366::-;;3946:67;4010:2;4005:3;3946:67;:::i;:::-;3939:74;;4022:93;4111:3;4022:93;:::i;:::-;4140:2;4135:3;4131:12;4124:19;;3929:220;;;:::o;4155:366::-;;4318:67;4382:2;4377:3;4318:67;:::i;:::-;4311:74;;4394:93;4483:3;4394:93;:::i;:::-;4512:2;4507:3;4503:12;4496:19;;4301:220;;;:::o;4527:366::-;;4690:67;4754:2;4749:3;4690:67;:::i;:::-;4683:74;;4766:93;4855:3;4766:93;:::i;:::-;4884:2;4879:3;4875:12;4868:19;;4673:220;;;:::o;4899:366::-;;5062:67;5126:2;5121:3;5062:67;:::i;:::-;5055:74;;5138:93;5227:3;5138:93;:::i;:::-;5256:2;5251:3;5247:12;5240:19;;5045:220;;;:::o;5271:366::-;;5434:67;5498:2;5493:3;5434:67;:::i;:::-;5427:74;;5510:93;5599:3;5510:93;:::i;:::-;5628:2;5623:3;5619:12;5612:19;;5417:220;;;:::o;5643:118::-;5730:24;5748:5;5730:24;:::i;:::-;5725:3;5718:37;5708:53;;:::o;5767:222::-;;5898:2;5887:9;5883:18;5875:26;;5911:71;5979:1;5968:9;5964:17;5955:6;5911:71;:::i;:::-;5865:124;;;;:::o;5995:442::-;;6182:2;6171:9;6167:18;6159:26;;6195:71;6263:1;6252:9;6248:17;6239:6;6195:71;:::i;:::-;6276:72;6344:2;6333:9;6329:18;6320:6;6276:72;:::i;:::-;6358;6426:2;6415:9;6411:18;6402:6;6358:72;:::i;:::-;6149:288;;;;;;:::o;6443:332::-;;6602:2;6591:9;6587:18;6579:26;;6615:71;6683:1;6672:9;6668:17;6659:6;6615:71;:::i;:::-;6696:72;6764:2;6753:9;6749:18;6740:6;6696:72;:::i;:::-;6569:206;;;;;:::o;6781:210::-;;6906:2;6895:9;6891:18;6883:26;;6919:65;6981:1;6970:9;6966:17;6957:6;6919:65;:::i;:::-;6873:118;;;;:::o;6997:250::-;;7142:2;7131:9;7127:18;7119:26;;7155:85;7237:1;7226:9;7222:17;7213:6;7155:85;:::i;:::-;7109:138;;;;:::o;7253:238::-;;7392:2;7381:9;7377:18;7369:26;;7405:79;7481:1;7470:9;7466:17;7457:6;7405:79;:::i;:::-;7359:132;;;;:::o;7497:419::-;;7701:2;7690:9;7686:18;7678:26;;7750:9;7744:4;7740:20;7736:1;7725:9;7721:17;7714:47;7778:131;7904:4;7778:131;:::i;:::-;7770:139;;7668:248;;;:::o;7922:419::-;;8126:2;8115:9;8111:18;8103:26;;8175:9;8169:4;8165:20;8161:1;8150:9;8146:17;8139:47;8203:131;8329:4;8203:131;:::i;:::-;8195:139;;8093:248;;;:::o;8347:419::-;;8551:2;8540:9;8536:18;8528:26;;8600:9;8594:4;8590:20;8586:1;8575:9;8571:17;8564:47;8628:131;8754:4;8628:131;:::i;:::-;8620:139;;8518:248;;;:::o;8772:419::-;;8976:2;8965:9;8961:18;8953:26;;9025:9;9019:4;9015:20;9011:1;9000:9;8996:17;8989:47;9053:131;9179:4;9053:131;:::i;:::-;9045:139;;8943:248;;;:::o;9197:419::-;;9401:2;9390:9;9386:18;9378:26;;9450:9;9444:4;9440:20;9436:1;9425:9;9421:17;9414:47;9478:131;9604:4;9478:131;:::i;:::-;9470:139;;9368:248;;;:::o;9622:419::-;;9826:2;9815:9;9811:18;9803:26;;9875:9;9869:4;9865:20;9861:1;9850:9;9846:17;9839:47;9903:131;10029:4;9903:131;:::i;:::-;9895:139;;9793:248;;;:::o;10047:419::-;;10251:2;10240:9;10236:18;10228:26;;10300:9;10294:4;10290:20;10286:1;10275:9;10271:17;10264:47;10328:131;10454:4;10328:131;:::i;:::-;10320:139;;10218:248;;;:::o;10472:419::-;;10676:2;10665:9;10661:18;10653:26;;10725:9;10719:4;10715:20;10711:1;10700:9;10696:17;10689:47;10753:131;10879:4;10753:131;:::i;:::-;10745:139;;10643:248;;;:::o;10897:222::-;;11028:2;11017:9;11013:18;11005:26;;11041:71;11109:1;11098:9;11094:17;11085:6;11041:71;:::i;:::-;10995:124;;;;:::o;11125:332::-;;11284:2;11273:9;11269:18;11261:26;;11297:71;11365:1;11354:9;11350:17;11341:6;11297:71;:::i;:::-;11378:72;11446:2;11435:9;11431:18;11422:6;11378:72;:::i;:::-;11251:206;;;;;:::o;11463:169::-;;11581:6;11576:3;11569:19;11621:4;11616:3;11612:14;11597:29;;11559:73;;;;:::o;11638:305::-;;11697:20;11715:1;11697:20;:::i;:::-;11692:25;;11731:20;11749:1;11731:20;:::i;:::-;11726:25;;11885:1;11817:66;11813:74;11810:1;11807:81;11804:2;;;11891:18;;:::i;:::-;11804:2;11935:1;11932;11928:9;11921:16;;11682:261;;;;:::o;11949:191::-;;12009:20;12027:1;12009:20;:::i;:::-;12004:25;;12043:20;12061:1;12043:20;:::i;:::-;12038:25;;12082:1;12079;12076:8;12073:2;;;12087:18;;:::i;:::-;12073:2;12132:1;12129;12125:9;12117:17;;11994:146;;;;:::o;12146:96::-;;12212:24;12230:5;12212:24;:::i;:::-;12201:35;;12191:51;;;:::o;12248:90::-;;12325:5;12318:13;12311:21;12300:32;;12290:48;;;:::o;12344:131::-;;12420:5;12409:16;;12426:43;12463:5;12426:43;:::i;:::-;12399:76;;;:::o;12481:126::-;;12558:42;12551:5;12547:54;12536:65;;12526:81;;;:::o;12613:77::-;;12679:5;12668:16;;12658:32;;;:::o;12696:154::-;;12793:51;12838:5;12793:51;:::i;:::-;12780:64;;12770:80;;;:::o;12856:127::-;;12953:24;12971:5;12953:24;:::i;:::-;12940:37;;12930:53;;;:::o;12989:131::-;;13080:34;13108:5;13080:34;:::i;:::-;13067:47;;13057:63;;;:::o;13126:180::-;13174:77;13171:1;13164:88;13271:4;13268:1;13261:15;13295:4;13292:1;13285:15;13312:180;13360:77;13357:1;13350:88;13457:4;13454:1;13447:15;13481:4;13478:1;13471:15;13498:163;13638:15;13634:1;13626:6;13622:14;13615:39;13604:57;:::o;13667:172::-;13807:24;13803:1;13795:6;13791:14;13784:48;13773:66;:::o;13845:160::-;13985:12;13981:1;13973:6;13969:14;13962:36;13951:54;:::o;14011:165::-;14151:17;14147:1;14139:6;14135:14;14128:41;14117:59;:::o;14182:180::-;14322:32;14318:1;14310:6;14306:14;14299:56;14288:74;:::o;14368:233::-;14508:34;14504:1;14496:6;14492:14;14485:58;14577:16;14572:2;14564:6;14560:15;14553:41;14474:127;:::o;14607:173::-;14747:25;14743:1;14735:6;14731:14;14724:49;14713:67;:::o;14786:179::-;14926:31;14922:1;14914:6;14910:14;14903:55;14892:73;:::o;14971:115::-;15054:1;15047:5;15044:12;15034:2;;15060:18;;:::i;:::-;15034:2;15024:62;:::o;15092:122::-;15165:24;15183:5;15165:24;:::i;:::-;15158:5;15155:35;15145:2;;15204:1;15201;15194:12;15145:2;15135:79;:::o;15220:116::-;15290:21;15305:5;15290:21;:::i;:::-;15283:5;15280:32;15270:2;;15326:1;15323;15316:12;15270:2;15260:76;:::o;15342:122::-;15415:24;15433:5;15415:24;:::i;:::-;15408:5;15405:35;15395:2;;15454:1;15451;15444:12;15395:2;15385:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\n/// @notice Common Good process \ncontract CommonWill is Initializable { \n\n    enum Status{PROCESS_ACTIVE, PROCESS_SUCCESS, PROCESS_FAILURE}\n\n    Status public status; \n    address public judge;\n    uint public processDueTime;\n    uint public minPledge;\n    uint public minPledgeDueTime;\n    mapping(address => uint) public pledges;\n    IERC20 public pledgeToken;\n    uint public totalPledge;\n\n    event Pledge(address indexed from, uint amount);\n    event Success(address winner);\n    event TimeOutProcess(uint time);\n    event TimeOutMinPledge(uint time, uint totalPledge);\n    event WithrawPledge(address indexed supporter, uint amount);\n    event Redeem(address indexed redeemer, uint executorTokensAmount, uint gain);\n\n    /**\n    * @param _judge The judge in the process\n    * @param _processDueTime Final time of the process. If this time is reached with no suceess of the executor, \n       the process is considered as failed and pledgers can withraw their pledge\n    * @param _minPledge Minimal pledge required to reach within a predefined time. If not reached the process is considered \n       as failed and pledgers can withraw their pledge\n    * @param _minPledgeDueTime predefined time for the minimal pledge to be reached\n    * @param _pledgeToken The pledge token in the process\n    */\n    function initialize(\n        address _judge,\n        uint _processDueTime,\n        uint _minPledge,\n        uint _minPledgeDueTime,\n        address _pledgeToken\n        )\n        public initializer\n    { \n        judge = _judge;\n        processDueTime = _processDueTime;\n        minPledge = _minPledge;\n        minPledgeDueTime = _minPledgeDueTime;\n        pledgeToken = IERC20(_pledgeToken);\n        status = Status.PROCESS_ACTIVE;\n    }\n\n    /**\n    * @notice Called by the judge to decide that an executor succeeded. Allowed only after minimal pledge time and amount have\n    *  been reached and before process timeout.\n    */\n    function judgeSuccess(address winner) public \n    {\n        require(msg.sender == judge, \"Only judge\");\n        require(!timeOutMinPledge(), \"Minimal pledge timeout\");\n        require(!timeOutProcess(), \"Process timeout\");\n        require(block.timestamp > minPledgeDueTime, \"Only after minimal pledge time\");\n\n        uint totalPledgeTemp = totalPledge;\n        totalPledge = 0;\n        status = Status.PROCESS_SUCCESS;\n        pledgeToken.transfer(winner, totalPledgeTemp);\n        emit Success(winner);\n    }\n\n    /**\n    * @notice Contribute a pledge for the process. Allowed while the process has not timed out or has been finalized by the judge\n    * @param amount The amount of tokens to pledge\n    * @dev An approve of the ERC20 token is required before calling this function  \n    */\n    function pledge(uint amount) public  {\n        if (status != Status.PROCESS_ACTIVE || timeOutMinPledge() || timeOutProcess()){\n            revert(\"Pledge window is closed\");\n        }\n\n        pledgeToken.transferFrom(msg.sender, address(this), amount);\n        totalPledge += amount;\n        pledges[msg.sender] += amount;\n        emit Pledge(msg.sender, amount);\n    }\n\n\n    /**\n    * @notice Withraw pledge in case the process has failed\n    */\n    function withrawPledge() public \n    {\n        uint pledgeAmount = pledges[msg.sender];\n        require(pledgeAmount > 0, \"Only pledgers\");\n        if (status == Status.PROCESS_FAILURE ||\n            timeOutMinPledge() || \n            timeOutProcess())\n        {\n            pledges[msg.sender] = 0; \n            totalPledge -= pledgeAmount;\n            pledgeToken.transfer(msg.sender, pledgeAmount);\n            emit WithrawPledge(msg.sender, pledgeAmount);\n        }\n        else{\n            revert(\"withraw not allowed currently\");\n        }\n    }\n\n    /**\n    * @notice check if process timeout was reached without success\n    */\n    function timeOutProcess() public returns(bool){\n        if ((status == Status.PROCESS_ACTIVE)  && (processDueTime < block.timestamp)){\n            emit TimeOutProcess(block.timestamp); \n            status = Status.PROCESS_FAILURE;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n    * @notice check if minimal pledge amount was not reached within the predefined time\n    */\n    function timeOutMinPledge() public returns(bool){\n        if ((status == Status.PROCESS_ACTIVE) && minPledgeDueTime < block.timestamp && totalPledge < minPledge){\n            emit TimeOutMinPledge(block.timestamp, totalPledge); \n            status = Status.PROCESS_FAILURE;\n            return true;\n        }\n        return false;\n    }\n}",
  "sourcePath": "/Users/idogershtein/Documents/CommonWill/contracts/CommonWill.sol",
  "ast": {
    "absolutePath": "project:/contracts/CommonWill.sol",
    "exportedSymbols": {
      "CommonWill": [
        1152
      ],
      "IERC20": [
        749
      ],
      "Initializable": [
        125
      ]
    },
    "id": 1153,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 798,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 799,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1153,
        "sourceUnit": 750,
        "src": "57:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 800,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1153,
        "sourceUnit": 126,
        "src": "114:63:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 802,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 125,
              "src": "235:13:6"
            },
            "id": 803,
            "nodeType": "InheritanceSpecifier",
            "src": "235:13:6"
          }
        ],
        "contractDependencies": [
          125
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 801,
          "nodeType": "StructuredDocumentation",
          "src": "179:33:6",
          "text": "@notice Common Good process "
        },
        "fullyImplemented": true,
        "id": 1152,
        "linearizedBaseContracts": [
          1152,
          125
        ],
        "name": "CommonWill",
        "nameLocation": "221:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "CommonWill.Status",
            "id": 807,
            "members": [
              {
                "id": 804,
                "name": "PROCESS_ACTIVE",
                "nameLocation": "269:14:6",
                "nodeType": "EnumValue",
                "src": "269:14:6"
              },
              {
                "id": 805,
                "name": "PROCESS_SUCCESS",
                "nameLocation": "285:15:6",
                "nodeType": "EnumValue",
                "src": "285:15:6"
              },
              {
                "id": 806,
                "name": "PROCESS_FAILURE",
                "nameLocation": "302:15:6",
                "nodeType": "EnumValue",
                "src": "302:15:6"
              }
            ],
            "name": "Status",
            "nameLocation": "262:6:6",
            "nodeType": "EnumDefinition",
            "src": "257:61:6"
          },
          {
            "constant": false,
            "functionSelector": "200d2ed2",
            "id": 810,
            "mutability": "mutable",
            "name": "status",
            "nameLocation": "338:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "324:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Status_$807",
              "typeString": "enum CommonWill.Status"
            },
            "typeName": {
              "id": 809,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 808,
                "name": "Status",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 807,
                "src": "324:6:6"
              },
              "referencedDeclaration": 807,
              "src": "324:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Status_$807",
                "typeString": "enum CommonWill.Status"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "573255f4",
            "id": 812,
            "mutability": "mutable",
            "name": "judge",
            "nameLocation": "366:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "351:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 811,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "351:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f30d1f1e",
            "id": 814,
            "mutability": "mutable",
            "name": "processDueTime",
            "nameLocation": "389:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "377:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 813,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "377:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b4b1786",
            "id": 816,
            "mutability": "mutable",
            "name": "minPledge",
            "nameLocation": "421:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "409:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 815,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "409:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ff4450f5",
            "id": 818,
            "mutability": "mutable",
            "name": "minPledgeDueTime",
            "nameLocation": "448:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "436:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 817,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "436:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "343576f5",
            "id": 822,
            "mutability": "mutable",
            "name": "pledges",
            "nameLocation": "502:7:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "470:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 821,
              "keyType": {
                "id": 819,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "478:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "470:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 820,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "489:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9c9ddef8",
            "id": 825,
            "mutability": "mutable",
            "name": "pledgeToken",
            "nameLocation": "529:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "515:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$749",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 824,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 823,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 749,
                "src": "515:6:6"
              },
              "referencedDeclaration": 749,
              "src": "515:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$749",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c21a43e4",
            "id": 827,
            "mutability": "mutable",
            "name": "totalPledge",
            "nameLocation": "558:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "546:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 826,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "546:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 833,
            "name": "Pledge",
            "nameLocation": "582:6:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "605:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "589:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "616:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "611:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:35:6"
            },
            "src": "576:48:6"
          },
          {
            "anonymous": false,
            "id": 837,
            "name": "Success",
            "nameLocation": "635:7:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "651:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "643:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:16:6"
            },
            "src": "629:30:6"
          },
          {
            "anonymous": false,
            "id": 841,
            "name": "TimeOutProcess",
            "nameLocation": "670:14:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "690:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "685:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "684:11:6"
            },
            "src": "664:32:6"
          },
          {
            "anonymous": false,
            "id": 847,
            "name": "TimeOutMinPledge",
            "nameLocation": "707:16:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "729:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "724:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalPledge",
                  "nameLocation": "740:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "735:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "735:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "723:29:6"
            },
            "src": "701:52:6"
          },
          {
            "anonymous": false,
            "id": 853,
            "name": "WithrawPledge",
            "nameLocation": "764:13:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "supporter",
                  "nameLocation": "794:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "778:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "810:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "805:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:40:6"
            },
            "src": "758:60:6"
          },
          {
            "anonymous": false,
            "id": 861,
            "name": "Redeem",
            "nameLocation": "829:6:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "redeemer",
                  "nameLocation": "852:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "836:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 857,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "executorTokensAmount",
                  "nameLocation": "867:20:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "862:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 859,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gain",
                  "nameLocation": "894:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "889:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:64:6"
            },
            "src": "823:77:6"
          },
          {
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "1685:236:6",
              "statements": [
                {
                  "expression": {
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 877,
                      "name": "judge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "1696:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 878,
                      "name": "_judge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "1704:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1696:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:14:6"
                },
                {
                  "expression": {
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 881,
                      "name": "processDueTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "1720:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 882,
                      "name": "_processDueTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "1737:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1720:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:32:6"
                },
                {
                  "expression": {
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 885,
                      "name": "minPledge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 816,
                      "src": "1762:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 886,
                      "name": "_minPledge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 868,
                      "src": "1774:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1762:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:22:6"
                },
                {
                  "expression": {
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 889,
                      "name": "minPledgeDueTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "1794:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 890,
                      "name": "_minPledgeDueTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "1813:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1794:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:36:6"
                },
                {
                  "expression": {
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 893,
                      "name": "pledgeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "1840:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$749",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 895,
                          "name": "_pledgeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "1861:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 894,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "1854:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$749_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1854:20:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$749",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1840:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$749",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 898,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:34:6"
                },
                {
                  "expression": {
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 899,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "1884:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$807",
                        "typeString": "enum CommonWill.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 900,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "1893:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                          "typeString": "type(enum CommonWill.Status)"
                        }
                      },
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PROCESS_ACTIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 804,
                      "src": "1893:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$807",
                        "typeString": "enum CommonWill.Status"
                      }
                    },
                    "src": "1884:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$807",
                      "typeString": "enum CommonWill.Status"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "1884:30:6"
                }
              ]
            },
            "documentation": {
              "id": 862,
              "nodeType": "StructuredDocumentation",
              "src": "906:572:6",
              "text": " @param _judge The judge in the process\n @param _processDueTime Final time of the process. If this time is reached with no suceess of the executor, \nthe process is considered as failed and pledgers can withraw their pledge\n @param _minPledge Minimal pledge required to reach within a predefined time. If not reached the process is considered \nas failed and pledgers can withraw their pledge\n @param _minPledgeDueTime predefined time for the minimal pledge to be reached\n @param _pledgeToken The pledge token in the process"
            },
            "functionSelector": "6c28e349",
            "id": 905,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 875,
                "modifierName": {
                  "id": 874,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 124,
                  "src": "1669:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1669:11:6"
              }
            ],
            "name": "initialize",
            "nameLocation": "1492:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "_judge",
                  "nameLocation": "1520:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "1512:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "_processDueTime",
                  "nameLocation": "1541:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "1536:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "_minPledge",
                  "nameLocation": "1571:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "1566:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "_minPledgeDueTime",
                  "nameLocation": "1596:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "1591:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "_pledgeToken",
                  "nameLocation": "1631:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "1623:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:151:6"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1685:0:6"
            },
            "scope": 1152,
            "src": "1483:438:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "2167:461:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 912,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2185:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2185:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 914,
                          "name": "judge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 812,
                          "src": "2199:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2185:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206a75646765",
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2206:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d",
                          "typeString": "literal_string \"Only judge\""
                        },
                        "value": "Only judge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d",
                          "typeString": "literal_string \"Only judge\""
                        }
                      ],
                      "id": 911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2177:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:42:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2237:19:6",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 920,
                            "name": "timeOutMinPledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "2238:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () returns (bool)"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2238:18:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e696d616c20706c656467652074696d656f7574",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2258:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9",
                          "typeString": "literal_string \"Minimal pledge timeout\""
                        },
                        "value": "Minimal pledge timeout"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9",
                          "typeString": "literal_string \"Minimal pledge timeout\""
                        }
                      ],
                      "id": 919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2229:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2229:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "2229:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2301:17:6",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 927,
                            "name": "timeOutProcess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1113,
                            "src": "2302:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () returns (bool)"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2302:16:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f636573732074696d656f7574",
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2320:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2",
                          "typeString": "literal_string \"Process timeout\""
                        },
                        "value": "Process timeout"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2",
                          "typeString": "literal_string \"Process timeout\""
                        }
                      ],
                      "id": 926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2293:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:45:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 934,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2356:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2356:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 936,
                          "name": "minPledgeDueTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "2374:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2356:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206166746572206d696e696d616c20706c656467652074696d65",
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c",
                          "typeString": "literal_string \"Only after minimal pledge time\""
                        },
                        "value": "Only after minimal pledge time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c",
                          "typeString": "literal_string \"Only after minimal pledge time\""
                        }
                      ],
                      "id": 933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2348:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2348:77:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 940,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:77:6"
                },
                {
                  "assignments": [
                    942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 942,
                      "mutability": "mutable",
                      "name": "totalPledgeTemp",
                      "nameLocation": "2441:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "2436:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 941,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2436:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 944,
                  "initialValue": {
                    "id": 943,
                    "name": "totalPledge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 827,
                    "src": "2459:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2436:34:6"
                },
                {
                  "expression": {
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 945,
                      "name": "totalPledge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "2480:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2494:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2480:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "2480:15:6"
                },
                {
                  "expression": {
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 949,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "2505:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$807",
                        "typeString": "enum CommonWill.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 950,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "2514:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                          "typeString": "type(enum CommonWill.Status)"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PROCESS_SUCCESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 805,
                      "src": "2514:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$807",
                        "typeString": "enum CommonWill.Status"
                      }
                    },
                    "src": "2505:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$807",
                      "typeString": "enum CommonWill.Status"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 957,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "2567:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 958,
                        "name": "totalPledgeTemp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "2575:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 954,
                        "name": "pledgeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "2546:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$749",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 698,
                      "src": "2546:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2546:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "2546:45:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 962,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "2614:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 961,
                      "name": "Success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "2606:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "EmitStatement",
                  "src": "2601:20:6"
                }
              ]
            },
            "documentation": {
              "id": 906,
              "nodeType": "StructuredDocumentation",
              "src": "1927:185:6",
              "text": " @notice Called by the judge to decide that an executor succeeded. Allowed only after minimal pledge time and amount have\n  been reached and before process timeout."
            },
            "functionSelector": "66dd53d5",
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "judgeSuccess",
            "nameLocation": "2126:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "2147:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "2139:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2138:16:6"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2167:0:6"
            },
            "scope": 1152,
            "src": "2117:511:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1017,
              "nodeType": "Block",
              "src": "2951:333:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$807",
                          "typeString": "enum CommonWill.Status"
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 972,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "2965:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 973,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "2975:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                              "typeString": "type(enum CommonWill.Status)"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PROCESS_ACTIVE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 804,
                          "src": "2975:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "src": "2965:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 976,
                          "name": "timeOutMinPledge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1151,
                          "src": "3000:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function () returns (bool)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3000:18:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2965:53:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 979,
                        "name": "timeOutProcess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "3022:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3022:16:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2965:73:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 987,
                  "nodeType": "IfStatement",
                  "src": "2961:136:6",
                  "trueBody": {
                    "id": 986,
                    "nodeType": "Block",
                    "src": "3039:58:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "506c656467652077696e646f7720697320636c6f736564",
                              "id": 983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3060:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f",
                                "typeString": "literal_string \"Pledge window is closed\""
                              },
                              "value": "Pledge window is closed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f",
                                "typeString": "literal_string \"Pledge window is closed\""
                              }
                            ],
                            "id": 982,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "3053:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 985,
                        "nodeType": "ExpressionStatement",
                        "src": "3053:33:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 991,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3132:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3132:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 995,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3152:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CommonWill_$1152",
                              "typeString": "contract CommonWill"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CommonWill_$1152",
                              "typeString": "contract CommonWill"
                            }
                          ],
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3144:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 993,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3144:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3144:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 997,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "3159:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 988,
                        "name": "pledgeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "3107:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$749",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 730,
                      "src": "3107:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3107:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "3107:59:6"
                },
                {
                  "expression": {
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1000,
                      "name": "totalPledge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "3176:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1001,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "3191:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3176:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "3176:21:6"
                },
                {
                  "expression": {
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1004,
                        "name": "pledges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "3207:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1007,
                      "indexExpression": {
                        "expression": {
                          "id": 1005,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3215:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3215:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3207:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1008,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "3230:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3207:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "3207:29:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1012,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3258:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3258:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1014,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "3270:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1011,
                      "name": "Pledge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "3251:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3251:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1016,
                  "nodeType": "EmitStatement",
                  "src": "3246:31:6"
                }
              ]
            },
            "documentation": {
              "id": 967,
              "nodeType": "StructuredDocumentation",
              "src": "2634:275:6",
              "text": " @notice Contribute a pledge for the process. Allowed while the process has not timed out or has been finalized by the judge\n @param amount The amount of tokens to pledge\n @dev An approve of the ERC20 token is required before calling this function  "
            },
            "functionSelector": "7326c9c0",
            "id": 1018,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pledge",
            "nameLocation": "2923:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2935:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "2930:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2930:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2929:13:6"
            },
            "returnParameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2951:0:6"
            },
            "scope": 1152,
            "src": "2914:370:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1078,
              "nodeType": "Block",
              "src": "3403:515:6",
              "statements": [
                {
                  "assignments": [
                    1023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1023,
                      "mutability": "mutable",
                      "name": "pledgeAmount",
                      "nameLocation": "3418:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1078,
                      "src": "3413:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1022,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3413:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1028,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1024,
                      "name": "pledges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 822,
                      "src": "3433:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1027,
                    "indexExpression": {
                      "expression": {
                        "id": 1025,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3441:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3441:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3433:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3413:39:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1030,
                          "name": "pledgeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1023,
                          "src": "3470:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3485:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3470:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920706c656467657273",
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3488:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5",
                          "typeString": "literal_string \"Only pledgers\""
                        },
                        "value": "Only pledgers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5",
                          "typeString": "literal_string \"Only pledgers\""
                        }
                      ],
                      "id": 1029,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3462:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3462:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:42:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$807",
                          "typeString": "enum CommonWill.Status"
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1036,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "3518:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1037,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "3528:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                              "typeString": "type(enum CommonWill.Status)"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PROCESS_FAILURE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 806,
                          "src": "3528:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "src": "3518:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1040,
                          "name": "timeOutMinPledge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1151,
                          "src": "3566:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function () returns (bool)"
                          }
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3566:18:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3518:66:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1043,
                        "name": "timeOutProcess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "3601:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3601:16:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3518:99:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1076,
                    "nodeType": "Block",
                    "src": "3848:64:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "77697468726177206e6f7420616c6c6f7765642063757272656e746c79",
                              "id": 1073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3869:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1",
                                "typeString": "literal_string \"withraw not allowed currently\""
                              },
                              "value": "withraw not allowed currently"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1",
                                "typeString": "literal_string \"withraw not allowed currently\""
                              }
                            ],
                            "id": 1072,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "3862:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3862:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1075,
                        "nodeType": "ExpressionStatement",
                        "src": "3862:39:6"
                      }
                    ]
                  },
                  "id": 1077,
                  "nodeType": "IfStatement",
                  "src": "3514:398:6",
                  "trueBody": {
                    "id": 1071,
                    "nodeType": "Block",
                    "src": "3627:208:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1046,
                              "name": "pledges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "3641:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1049,
                            "indexExpression": {
                              "expression": {
                                "id": 1047,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3649:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3649:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3641:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3663:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3641:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1052,
                        "nodeType": "ExpressionStatement",
                        "src": "3641:23:6"
                      },
                      {
                        "expression": {
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1053,
                            "name": "totalPledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 827,
                            "src": "3679:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1054,
                            "name": "pledgeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1023,
                            "src": "3694:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3679:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1056,
                        "nodeType": "ExpressionStatement",
                        "src": "3679:27:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1060,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3741:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3741:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1062,
                              "name": "pledgeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "3753:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1057,
                              "name": "pledgeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 825,
                              "src": "3720:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$749",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 698,
                            "src": "3720:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3720:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1064,
                        "nodeType": "ExpressionStatement",
                        "src": "3720:46:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1066,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3799:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3799:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1068,
                              "name": "pledgeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "3811:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1065,
                            "name": "WithrawPledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "3785:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3785:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1070,
                        "nodeType": "EmitStatement",
                        "src": "3780:44:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1019,
              "nodeType": "StructuredDocumentation",
              "src": "3291:70:6",
              "text": " @notice Withraw pledge in case the process has failed"
            },
            "functionSelector": "59d302c5",
            "id": 1079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withrawPledge",
            "nameLocation": "3375:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3388:2:6"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3403:0:6"
            },
            "scope": 1152,
            "src": "3366:552:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1112,
              "nodeType": "Block",
              "src": "4052:247:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          },
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1085,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "4067:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1086,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "4077:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                                "typeString": "type(enum CommonWill.Status)"
                              }
                            },
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PROCESS_ACTIVE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 804,
                            "src": "4077:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "src": "4067:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1089,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4066:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1090,
                            "name": "processDueTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 814,
                            "src": "4105:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1091,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4122:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4122:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4105:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1094,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4104:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4066:72:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1109,
                  "nodeType": "IfStatement",
                  "src": "4062:209:6",
                  "trueBody": {
                    "id": 1108,
                    "nodeType": "Block",
                    "src": "4139:132:6",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1097,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "4173:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4173:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1096,
                            "name": "TimeOutProcess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "4158:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4158:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1100,
                        "nodeType": "EmitStatement",
                        "src": "4153:36:6"
                      },
                      {
                        "expression": {
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1101,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "4204:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1102,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "4213:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                                "typeString": "type(enum CommonWill.Status)"
                              }
                            },
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PROCESS_FAILURE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 806,
                            "src": "4213:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "src": "4204:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "id": 1105,
                        "nodeType": "ExpressionStatement",
                        "src": "4204:31:6"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4256:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1084,
                        "id": 1107,
                        "nodeType": "Return",
                        "src": "4249:11:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4287:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1084,
                  "id": 1111,
                  "nodeType": "Return",
                  "src": "4280:12:6"
                }
              ]
            },
            "documentation": {
              "id": 1080,
              "nodeType": "StructuredDocumentation",
              "src": "3924:77:6",
              "text": " @notice check if process timeout was reached without success"
            },
            "functionSelector": "86e79bd9",
            "id": 1113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "timeOutProcess",
            "nameLocation": "4015:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4029:2:6"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4047:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4046:6:6"
            },
            "scope": 1152,
            "src": "4006:293:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1150,
              "nodeType": "Block",
              "src": "4456:288:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            },
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1119,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "4471:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$807",
                                "typeString": "enum CommonWill.Status"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1120,
                                "name": "Status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "4481:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                                  "typeString": "type(enum CommonWill.Status)"
                                }
                              },
                              "id": 1121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PROCESS_ACTIVE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 804,
                              "src": "4481:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$807",
                                "typeString": "enum CommonWill.Status"
                              }
                            },
                            "src": "4471:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1123,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4470:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1124,
                          "name": "minPledgeDueTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "4507:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1125,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4526:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4526:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4507:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4470:71:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1129,
                        "name": "totalPledge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "4545:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1130,
                        "name": "minPledge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "4559:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4545:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4470:98:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1147,
                  "nodeType": "IfStatement",
                  "src": "4466:250:6",
                  "trueBody": {
                    "id": 1146,
                    "nodeType": "Block",
                    "src": "4569:147:6",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1134,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "4605:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4605:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1136,
                              "name": "totalPledge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 827,
                              "src": "4622:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1133,
                            "name": "TimeOutMinPledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "4588:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4588:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1138,
                        "nodeType": "EmitStatement",
                        "src": "4583:51:6"
                      },
                      {
                        "expression": {
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1139,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "4649:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1140,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "4658:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                                "typeString": "type(enum CommonWill.Status)"
                              }
                            },
                            "id": 1141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PROCESS_FAILURE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 806,
                            "src": "4658:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "src": "4649:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "id": 1143,
                        "nodeType": "ExpressionStatement",
                        "src": "4649:31:6"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4701:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1118,
                        "id": 1145,
                        "nodeType": "Return",
                        "src": "4694:11:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4732:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1118,
                  "id": 1149,
                  "nodeType": "Return",
                  "src": "4725:12:6"
                }
              ]
            },
            "documentation": {
              "id": 1114,
              "nodeType": "StructuredDocumentation",
              "src": "4305:98:6",
              "text": " @notice check if minimal pledge amount was not reached within the predefined time"
            },
            "functionSelector": "aace53bd",
            "id": 1151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "timeOutMinPledge",
            "nameLocation": "4417:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4433:2:6"
            },
            "returnParameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "4451:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4451:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4450:6:6"
            },
            "scope": 1152,
            "src": "4408:336:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1153,
        "src": "212:4534:6"
      }
    ],
    "src": "32:4714:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CommonWill.sol",
    "exportedSymbols": {
      "CommonWill": [
        1152
      ],
      "IERC20": [
        749
      ],
      "Initializable": [
        125
      ]
    },
    "id": 1153,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 798,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 799,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1153,
        "sourceUnit": 750,
        "src": "57:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 800,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1153,
        "sourceUnit": 126,
        "src": "114:63:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 802,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 125,
              "src": "235:13:6"
            },
            "id": 803,
            "nodeType": "InheritanceSpecifier",
            "src": "235:13:6"
          }
        ],
        "contractDependencies": [
          125
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 801,
          "nodeType": "StructuredDocumentation",
          "src": "179:33:6",
          "text": "@notice Common Good process "
        },
        "fullyImplemented": true,
        "id": 1152,
        "linearizedBaseContracts": [
          1152,
          125
        ],
        "name": "CommonWill",
        "nameLocation": "221:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "CommonWill.Status",
            "id": 807,
            "members": [
              {
                "id": 804,
                "name": "PROCESS_ACTIVE",
                "nameLocation": "269:14:6",
                "nodeType": "EnumValue",
                "src": "269:14:6"
              },
              {
                "id": 805,
                "name": "PROCESS_SUCCESS",
                "nameLocation": "285:15:6",
                "nodeType": "EnumValue",
                "src": "285:15:6"
              },
              {
                "id": 806,
                "name": "PROCESS_FAILURE",
                "nameLocation": "302:15:6",
                "nodeType": "EnumValue",
                "src": "302:15:6"
              }
            ],
            "name": "Status",
            "nameLocation": "262:6:6",
            "nodeType": "EnumDefinition",
            "src": "257:61:6"
          },
          {
            "constant": false,
            "functionSelector": "200d2ed2",
            "id": 810,
            "mutability": "mutable",
            "name": "status",
            "nameLocation": "338:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "324:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Status_$807",
              "typeString": "enum CommonWill.Status"
            },
            "typeName": {
              "id": 809,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 808,
                "name": "Status",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 807,
                "src": "324:6:6"
              },
              "referencedDeclaration": 807,
              "src": "324:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Status_$807",
                "typeString": "enum CommonWill.Status"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "573255f4",
            "id": 812,
            "mutability": "mutable",
            "name": "judge",
            "nameLocation": "366:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "351:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 811,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "351:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f30d1f1e",
            "id": 814,
            "mutability": "mutable",
            "name": "processDueTime",
            "nameLocation": "389:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "377:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 813,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "377:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b4b1786",
            "id": 816,
            "mutability": "mutable",
            "name": "minPledge",
            "nameLocation": "421:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "409:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 815,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "409:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ff4450f5",
            "id": 818,
            "mutability": "mutable",
            "name": "minPledgeDueTime",
            "nameLocation": "448:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "436:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 817,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "436:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "343576f5",
            "id": 822,
            "mutability": "mutable",
            "name": "pledges",
            "nameLocation": "502:7:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "470:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 821,
              "keyType": {
                "id": 819,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "478:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "470:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 820,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "489:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9c9ddef8",
            "id": 825,
            "mutability": "mutable",
            "name": "pledgeToken",
            "nameLocation": "529:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "515:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$749",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 824,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 823,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 749,
                "src": "515:6:6"
              },
              "referencedDeclaration": 749,
              "src": "515:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$749",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c21a43e4",
            "id": 827,
            "mutability": "mutable",
            "name": "totalPledge",
            "nameLocation": "558:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1152,
            "src": "546:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 826,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "546:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 833,
            "name": "Pledge",
            "nameLocation": "582:6:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "605:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "589:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "616:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "611:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:35:6"
            },
            "src": "576:48:6"
          },
          {
            "anonymous": false,
            "id": 837,
            "name": "Success",
            "nameLocation": "635:7:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "651:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "643:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:16:6"
            },
            "src": "629:30:6"
          },
          {
            "anonymous": false,
            "id": 841,
            "name": "TimeOutProcess",
            "nameLocation": "670:14:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "690:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "685:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "684:11:6"
            },
            "src": "664:32:6"
          },
          {
            "anonymous": false,
            "id": 847,
            "name": "TimeOutMinPledge",
            "nameLocation": "707:16:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "729:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "724:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalPledge",
                  "nameLocation": "740:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "735:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "735:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "723:29:6"
            },
            "src": "701:52:6"
          },
          {
            "anonymous": false,
            "id": 853,
            "name": "WithrawPledge",
            "nameLocation": "764:13:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "supporter",
                  "nameLocation": "794:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "778:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "810:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "805:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:40:6"
            },
            "src": "758:60:6"
          },
          {
            "anonymous": false,
            "id": 861,
            "name": "Redeem",
            "nameLocation": "829:6:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "redeemer",
                  "nameLocation": "852:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "836:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 857,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "executorTokensAmount",
                  "nameLocation": "867:20:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "862:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 859,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gain",
                  "nameLocation": "894:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "889:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:64:6"
            },
            "src": "823:77:6"
          },
          {
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "1685:236:6",
              "statements": [
                {
                  "expression": {
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 877,
                      "name": "judge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "1696:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 878,
                      "name": "_judge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "1704:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1696:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:14:6"
                },
                {
                  "expression": {
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 881,
                      "name": "processDueTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "1720:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 882,
                      "name": "_processDueTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "1737:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1720:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:32:6"
                },
                {
                  "expression": {
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 885,
                      "name": "minPledge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 816,
                      "src": "1762:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 886,
                      "name": "_minPledge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 868,
                      "src": "1774:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1762:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:22:6"
                },
                {
                  "expression": {
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 889,
                      "name": "minPledgeDueTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "1794:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 890,
                      "name": "_minPledgeDueTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "1813:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1794:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:36:6"
                },
                {
                  "expression": {
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 893,
                      "name": "pledgeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "1840:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$749",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 895,
                          "name": "_pledgeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "1861:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 894,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "1854:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$749_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1854:20:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$749",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1840:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$749",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 898,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:34:6"
                },
                {
                  "expression": {
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 899,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "1884:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$807",
                        "typeString": "enum CommonWill.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 900,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "1893:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                          "typeString": "type(enum CommonWill.Status)"
                        }
                      },
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PROCESS_ACTIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 804,
                      "src": "1893:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$807",
                        "typeString": "enum CommonWill.Status"
                      }
                    },
                    "src": "1884:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$807",
                      "typeString": "enum CommonWill.Status"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "1884:30:6"
                }
              ]
            },
            "documentation": {
              "id": 862,
              "nodeType": "StructuredDocumentation",
              "src": "906:572:6",
              "text": " @param _judge The judge in the process\n @param _processDueTime Final time of the process. If this time is reached with no suceess of the executor, \nthe process is considered as failed and pledgers can withraw their pledge\n @param _minPledge Minimal pledge required to reach within a predefined time. If not reached the process is considered \nas failed and pledgers can withraw their pledge\n @param _minPledgeDueTime predefined time for the minimal pledge to be reached\n @param _pledgeToken The pledge token in the process"
            },
            "functionSelector": "6c28e349",
            "id": 905,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 875,
                "modifierName": {
                  "id": 874,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 124,
                  "src": "1669:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1669:11:6"
              }
            ],
            "name": "initialize",
            "nameLocation": "1492:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "_judge",
                  "nameLocation": "1520:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "1512:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "_processDueTime",
                  "nameLocation": "1541:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "1536:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "_minPledge",
                  "nameLocation": "1571:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "1566:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "_minPledgeDueTime",
                  "nameLocation": "1596:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "1591:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "_pledgeToken",
                  "nameLocation": "1631:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "1623:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:151:6"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1685:0:6"
            },
            "scope": 1152,
            "src": "1483:438:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "2167:461:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 912,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2185:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2185:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 914,
                          "name": "judge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 812,
                          "src": "2199:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2185:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206a75646765",
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2206:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d",
                          "typeString": "literal_string \"Only judge\""
                        },
                        "value": "Only judge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48d7843315f4ce896634997e112c5d1f2787dbd4b4300e9b18dce62b91a6fa3d",
                          "typeString": "literal_string \"Only judge\""
                        }
                      ],
                      "id": 911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2177:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:42:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2237:19:6",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 920,
                            "name": "timeOutMinPledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "2238:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () returns (bool)"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2238:18:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e696d616c20706c656467652074696d656f7574",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2258:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9",
                          "typeString": "literal_string \"Minimal pledge timeout\""
                        },
                        "value": "Minimal pledge timeout"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e647a4bd32929d6bec63dcef4e89895c1e1a8b52fdf8233bde096f5cb0c86f9",
                          "typeString": "literal_string \"Minimal pledge timeout\""
                        }
                      ],
                      "id": 919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2229:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2229:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "2229:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2301:17:6",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 927,
                            "name": "timeOutProcess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1113,
                            "src": "2302:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                              "typeString": "function () returns (bool)"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2302:16:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f636573732074696d656f7574",
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2320:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2",
                          "typeString": "literal_string \"Process timeout\""
                        },
                        "value": "Process timeout"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7033ecc805c8858edb7b19d84d8b8f076fd16ae491fba74c1872029c676f19b2",
                          "typeString": "literal_string \"Process timeout\""
                        }
                      ],
                      "id": 926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2293:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:45:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 934,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "2356:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2356:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 936,
                          "name": "minPledgeDueTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "2374:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2356:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206166746572206d696e696d616c20706c656467652074696d65",
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c",
                          "typeString": "literal_string \"Only after minimal pledge time\""
                        },
                        "value": "Only after minimal pledge time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7133a8009604bda36fa3d80daa955912e00946e974861fcf097c0ace3778870c",
                          "typeString": "literal_string \"Only after minimal pledge time\""
                        }
                      ],
                      "id": 933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2348:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2348:77:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 940,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:77:6"
                },
                {
                  "assignments": [
                    942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 942,
                      "mutability": "mutable",
                      "name": "totalPledgeTemp",
                      "nameLocation": "2441:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 965,
                      "src": "2436:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 941,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2436:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 944,
                  "initialValue": {
                    "id": 943,
                    "name": "totalPledge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 827,
                    "src": "2459:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2436:34:6"
                },
                {
                  "expression": {
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 945,
                      "name": "totalPledge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "2480:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2494:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2480:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "2480:15:6"
                },
                {
                  "expression": {
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 949,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "2505:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$807",
                        "typeString": "enum CommonWill.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 950,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "2514:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                          "typeString": "type(enum CommonWill.Status)"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PROCESS_SUCCESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 805,
                      "src": "2514:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$807",
                        "typeString": "enum CommonWill.Status"
                      }
                    },
                    "src": "2505:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$807",
                      "typeString": "enum CommonWill.Status"
                    }
                  },
                  "id": 953,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 957,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "2567:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 958,
                        "name": "totalPledgeTemp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "2575:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 954,
                        "name": "pledgeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "2546:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$749",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 698,
                      "src": "2546:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2546:45:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "2546:45:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 962,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "2614:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 961,
                      "name": "Success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "2606:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 964,
                  "nodeType": "EmitStatement",
                  "src": "2601:20:6"
                }
              ]
            },
            "documentation": {
              "id": 906,
              "nodeType": "StructuredDocumentation",
              "src": "1927:185:6",
              "text": " @notice Called by the judge to decide that an executor succeeded. Allowed only after minimal pledge time and amount have\n  been reached and before process timeout."
            },
            "functionSelector": "66dd53d5",
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "judgeSuccess",
            "nameLocation": "2126:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "2147:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "2139:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2138:16:6"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2167:0:6"
            },
            "scope": 1152,
            "src": "2117:511:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1017,
              "nodeType": "Block",
              "src": "2951:333:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$807",
                          "typeString": "enum CommonWill.Status"
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 972,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "2965:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 973,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "2975:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                              "typeString": "type(enum CommonWill.Status)"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PROCESS_ACTIVE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 804,
                          "src": "2975:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "src": "2965:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 976,
                          "name": "timeOutMinPledge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1151,
                          "src": "3000:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function () returns (bool)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3000:18:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2965:53:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 979,
                        "name": "timeOutProcess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "3022:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3022:16:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2965:73:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 987,
                  "nodeType": "IfStatement",
                  "src": "2961:136:6",
                  "trueBody": {
                    "id": 986,
                    "nodeType": "Block",
                    "src": "3039:58:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "506c656467652077696e646f7720697320636c6f736564",
                              "id": 983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3060:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f",
                                "typeString": "literal_string \"Pledge window is closed\""
                              },
                              "value": "Pledge window is closed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_952be55c4ac9c8da80157dea6ef40894b8dc0fa686d62b758f0d0cb498209e3f",
                                "typeString": "literal_string \"Pledge window is closed\""
                              }
                            ],
                            "id": 982,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "3053:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 985,
                        "nodeType": "ExpressionStatement",
                        "src": "3053:33:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 991,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3132:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3132:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 995,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3152:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CommonWill_$1152",
                              "typeString": "contract CommonWill"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CommonWill_$1152",
                              "typeString": "contract CommonWill"
                            }
                          ],
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3144:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 993,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3144:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3144:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 997,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "3159:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 988,
                        "name": "pledgeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "3107:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$749",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 730,
                      "src": "3107:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3107:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "3107:59:6"
                },
                {
                  "expression": {
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1000,
                      "name": "totalPledge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "3176:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1001,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "3191:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3176:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "3176:21:6"
                },
                {
                  "expression": {
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1004,
                        "name": "pledges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "3207:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1007,
                      "indexExpression": {
                        "expression": {
                          "id": 1005,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3215:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3215:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3207:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1008,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "3230:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3207:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "3207:29:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1012,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3258:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3258:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1014,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "3270:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1011,
                      "name": "Pledge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "3251:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3251:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1016,
                  "nodeType": "EmitStatement",
                  "src": "3246:31:6"
                }
              ]
            },
            "documentation": {
              "id": 967,
              "nodeType": "StructuredDocumentation",
              "src": "2634:275:6",
              "text": " @notice Contribute a pledge for the process. Allowed while the process has not timed out or has been finalized by the judge\n @param amount The amount of tokens to pledge\n @dev An approve of the ERC20 token is required before calling this function  "
            },
            "functionSelector": "7326c9c0",
            "id": 1018,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pledge",
            "nameLocation": "2923:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2935:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1018,
                  "src": "2930:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2930:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2929:13:6"
            },
            "returnParameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2951:0:6"
            },
            "scope": 1152,
            "src": "2914:370:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1078,
              "nodeType": "Block",
              "src": "3403:515:6",
              "statements": [
                {
                  "assignments": [
                    1023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1023,
                      "mutability": "mutable",
                      "name": "pledgeAmount",
                      "nameLocation": "3418:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1078,
                      "src": "3413:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1022,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3413:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1028,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1024,
                      "name": "pledges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 822,
                      "src": "3433:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1027,
                    "indexExpression": {
                      "expression": {
                        "id": 1025,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3441:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3441:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3433:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3413:39:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1030,
                          "name": "pledgeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1023,
                          "src": "3470:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3485:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3470:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920706c656467657273",
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3488:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5",
                          "typeString": "literal_string \"Only pledgers\""
                        },
                        "value": "Only pledgers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_390986b48b85346378382bd551440ddfa499a2052a6510a148ac8197afb538f5",
                          "typeString": "literal_string \"Only pledgers\""
                        }
                      ],
                      "id": 1029,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3462:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3462:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:42:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$807",
                          "typeString": "enum CommonWill.Status"
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1036,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "3518:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1037,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "3528:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                              "typeString": "type(enum CommonWill.Status)"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PROCESS_FAILURE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 806,
                          "src": "3528:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "src": "3518:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1040,
                          "name": "timeOutMinPledge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1151,
                          "src": "3566:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                            "typeString": "function () returns (bool)"
                          }
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3566:18:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3518:66:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1043,
                        "name": "timeOutProcess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "3601:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                          "typeString": "function () returns (bool)"
                        }
                      },
                      "id": 1044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3601:16:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3518:99:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1076,
                    "nodeType": "Block",
                    "src": "3848:64:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "77697468726177206e6f7420616c6c6f7765642063757272656e746c79",
                              "id": 1073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3869:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1",
                                "typeString": "literal_string \"withraw not allowed currently\""
                              },
                              "value": "withraw not allowed currently"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_99dd4f4e52c31c973fb62998777604bd08fd7c25da20c7e2df2f69b231ea39f1",
                                "typeString": "literal_string \"withraw not allowed currently\""
                              }
                            ],
                            "id": 1072,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "3862:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3862:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1075,
                        "nodeType": "ExpressionStatement",
                        "src": "3862:39:6"
                      }
                    ]
                  },
                  "id": 1077,
                  "nodeType": "IfStatement",
                  "src": "3514:398:6",
                  "trueBody": {
                    "id": 1071,
                    "nodeType": "Block",
                    "src": "3627:208:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1046,
                              "name": "pledges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "3641:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1049,
                            "indexExpression": {
                              "expression": {
                                "id": 1047,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3649:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3649:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3641:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3663:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3641:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1052,
                        "nodeType": "ExpressionStatement",
                        "src": "3641:23:6"
                      },
                      {
                        "expression": {
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1053,
                            "name": "totalPledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 827,
                            "src": "3679:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1054,
                            "name": "pledgeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1023,
                            "src": "3694:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3679:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1056,
                        "nodeType": "ExpressionStatement",
                        "src": "3679:27:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1060,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3741:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3741:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1062,
                              "name": "pledgeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "3753:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1057,
                              "name": "pledgeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 825,
                              "src": "3720:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$749",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 698,
                            "src": "3720:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3720:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1064,
                        "nodeType": "ExpressionStatement",
                        "src": "3720:46:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1066,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3799:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3799:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1068,
                              "name": "pledgeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "3811:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1065,
                            "name": "WithrawPledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "3785:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3785:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1070,
                        "nodeType": "EmitStatement",
                        "src": "3780:44:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1019,
              "nodeType": "StructuredDocumentation",
              "src": "3291:70:6",
              "text": " @notice Withraw pledge in case the process has failed"
            },
            "functionSelector": "59d302c5",
            "id": 1079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withrawPledge",
            "nameLocation": "3375:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3388:2:6"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3403:0:6"
            },
            "scope": 1152,
            "src": "3366:552:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1112,
              "nodeType": "Block",
              "src": "4052:247:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          },
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1085,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "4067:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1086,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "4077:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                                "typeString": "type(enum CommonWill.Status)"
                              }
                            },
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PROCESS_ACTIVE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 804,
                            "src": "4077:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "src": "4067:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1089,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4066:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1090,
                            "name": "processDueTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 814,
                            "src": "4105:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1091,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4122:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4122:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4105:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1094,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4104:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4066:72:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1109,
                  "nodeType": "IfStatement",
                  "src": "4062:209:6",
                  "trueBody": {
                    "id": 1108,
                    "nodeType": "Block",
                    "src": "4139:132:6",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1097,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "4173:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4173:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1096,
                            "name": "TimeOutProcess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "4158:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4158:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1100,
                        "nodeType": "EmitStatement",
                        "src": "4153:36:6"
                      },
                      {
                        "expression": {
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1101,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "4204:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1102,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "4213:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                                "typeString": "type(enum CommonWill.Status)"
                              }
                            },
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PROCESS_FAILURE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 806,
                            "src": "4213:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "src": "4204:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "id": 1105,
                        "nodeType": "ExpressionStatement",
                        "src": "4204:31:6"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4256:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1084,
                        "id": 1107,
                        "nodeType": "Return",
                        "src": "4249:11:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4287:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1084,
                  "id": 1111,
                  "nodeType": "Return",
                  "src": "4280:12:6"
                }
              ]
            },
            "documentation": {
              "id": 1080,
              "nodeType": "StructuredDocumentation",
              "src": "3924:77:6",
              "text": " @notice check if process timeout was reached without success"
            },
            "functionSelector": "86e79bd9",
            "id": 1113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "timeOutProcess",
            "nameLocation": "4015:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4029:2:6"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1113,
                  "src": "4047:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4046:6:6"
            },
            "scope": 1152,
            "src": "4006:293:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1150,
              "nodeType": "Block",
              "src": "4456:288:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            },
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1119,
                              "name": "status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "4471:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$807",
                                "typeString": "enum CommonWill.Status"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1120,
                                "name": "Status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "4481:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                                  "typeString": "type(enum CommonWill.Status)"
                                }
                              },
                              "id": 1121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PROCESS_ACTIVE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 804,
                              "src": "4481:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Status_$807",
                                "typeString": "enum CommonWill.Status"
                              }
                            },
                            "src": "4471:31:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1123,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4470:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1124,
                          "name": "minPledgeDueTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "4507:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1125,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4526:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4526:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4507:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4470:71:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1129,
                        "name": "totalPledge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "4545:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1130,
                        "name": "minPledge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "4559:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4545:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4470:98:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1147,
                  "nodeType": "IfStatement",
                  "src": "4466:250:6",
                  "trueBody": {
                    "id": 1146,
                    "nodeType": "Block",
                    "src": "4569:147:6",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1134,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "4605:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4605:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1136,
                              "name": "totalPledge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 827,
                              "src": "4622:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1133,
                            "name": "TimeOutMinPledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "4588:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4588:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1138,
                        "nodeType": "EmitStatement",
                        "src": "4583:51:6"
                      },
                      {
                        "expression": {
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1139,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 810,
                            "src": "4649:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1140,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "4658:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$807_$",
                                "typeString": "type(enum CommonWill.Status)"
                              }
                            },
                            "id": 1141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PROCESS_FAILURE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 806,
                            "src": "4658:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$807",
                              "typeString": "enum CommonWill.Status"
                            }
                          },
                          "src": "4649:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$807",
                            "typeString": "enum CommonWill.Status"
                          }
                        },
                        "id": 1143,
                        "nodeType": "ExpressionStatement",
                        "src": "4649:31:6"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4701:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1118,
                        "id": 1145,
                        "nodeType": "Return",
                        "src": "4694:11:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4732:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1118,
                  "id": 1149,
                  "nodeType": "Return",
                  "src": "4725:12:6"
                }
              ]
            },
            "documentation": {
              "id": 1114,
              "nodeType": "StructuredDocumentation",
              "src": "4305:98:6",
              "text": " @notice check if minimal pledge amount was not reached within the predefined time"
            },
            "functionSelector": "aace53bd",
            "id": 1151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "timeOutMinPledge",
            "nameLocation": "4417:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4433:2:6"
            },
            "returnParameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1151,
                  "src": "4451:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4451:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4450:6:6"
            },
            "scope": 1152,
            "src": "4408:336:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1153,
        "src": "212:4534:6"
      }
    ],
    "src": "32:4714:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x95E574C9a1bF7dd2a2FC31bf08c888CdB6C86cc6",
      "transactionHash": "0xc84eee2b5bc6e60b71a711a0b1c4529f2a07764d0163202b5a0b665f4c662b74"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-09-26T06:57:30.319Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "initialize(address,uint256,uint256,uint256,address)": {
        "params": {
          "_judge": "The judge in the process",
          "_minPledge": "Minimal pledge required to reach within a predefined time. If not reached the process is considered  as failed and pledgers can withraw their pledge",
          "_minPledgeDueTime": "predefined time for the minimal pledge to be reached",
          "_pledgeToken": "The pledge token in the process",
          "_processDueTime": "Final time of the process. If this time is reached with no suceess of the executor,  the process is considered as failed and pledgers can withraw their pledge"
        }
      },
      "pledge(uint256)": {
        "details": "An approve of the ERC20 token is required before calling this function  ",
        "params": {
          "amount": "The amount of tokens to pledge"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "judgeSuccess(address)": {
        "notice": "Called by the judge to decide that an executor succeeded. Allowed only after minimal pledge time and amount have  been reached and before process timeout."
      },
      "pledge(uint256)": {
        "notice": "Contribute a pledge for the process. Allowed while the process has not timed out or has been finalized by the judge"
      },
      "timeOutMinPledge()": {
        "notice": "check if minimal pledge amount was not reached within the predefined time"
      },
      "timeOutProcess()": {
        "notice": "check if process timeout was reached without success"
      },
      "withrawPledge()": {
        "notice": "Withraw pledge in case the process has failed"
      }
    },
    "notice": "Common Good process ",
    "version": 1
  }
}